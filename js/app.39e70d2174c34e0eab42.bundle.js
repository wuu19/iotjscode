webpackJsonp([0],{"1Xt6":function(e,t,n){"use strict";function i(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),o=t.GLYPH_TYPE={INACTIVE:"inactive",ACTIVE:"active"},r=function(){function e(t){a(this,e),this._editor=t,this._decorations=[],this._list=[]}return s(e,[{key:"add",value:function(e,t,n){this._list=[].concat(i(this._list),[{type:e,file:t,line:n,object:l(e,n)}])}},{key:"isLineActive",value:function(e,t){return this._list.find(function(n){return n.file===e&&n.line===t}).type===o.ACTIVE}},{key:"listByFile",value:function(e){return this._list.filter(function(t){return t.file===e})}},{key:"objectByFile",value:function(e){return this._list.filter(function(t){return t.file===e}).map(function(e){return e.object})}},{key:"remove",value:function(e,t){this._list=this._list.filter(function(n){return n.file!==e&&n.line!==t})}},{key:"removeByFile",value:function(e){this._list=this._list.filter(function(t){return t.file!==e})}},{key:"removeAll",value:function(){this._list=[],this.render(this._decorations,this._list)}},{key:"change",value:function(e,t,n){this._list=this._list.map(function(i){return i.file===e&&i.line===t?{type:n,file:i.file,line:i.line,object:l(n,t)}:i})}},{key:"resetByType",value:function(e){this._list=this._list.map(function(t){t.type===e&&(t.type=o.INACTIVE)})}},{key:"isFileInitialized",value:function(e){return-1!==this._list.findIndex(function(t){return t.file===e})}},{key:"renderByFile",value:function(e){this.render(this._decorations,this._list.filter(function(t){return t.file===e}).map(function(e){return e.object}))}},{key:"render",value:function(e,t){this._decorations=this._editor.deltaDecorations(e,t)}},{key:"decorations",get:function(){return this._decorations}},{key:"list",get:function(){return this._list}}]),e}();t.default=r;var l=function(e,t){return{range:new window.monaco.Range(t,1,t,1),options:{glyphMarginClassName:e+"-breakpoint-line"}}}},"2QIY":function(e,t,n){"use strict";(function(e){function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0}),t.SURFACE_RUN_UPDATE_TYPE=t.SURFACE_COLOR=t.SURFACE_CSICON=void 0;var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),s=n("LEPx"),o=n("lOm7"),r=function(e){return e&&e.__esModule?e:{default:e}}(o),l=t.SURFACE_CSICON={STOP:0,CONTINUE:1},c=(t.SURFACE_COLOR={RED:0,GREEN:1,BLUE:2,YELLOW:3,WHITE:4},t.SURFACE_RUN_UPDATE_TYPE={ALL:0,LIST:1,BUTTON:2,CR:3,JQUI:4}),u=function(){function t(){i(this,t),this._sidenav={opened:!1,closedWidth:40,openedWidth:240},this._sidenavExtra={opened:!1,last:"",newFile:{opened:!1},run:{enabled:!1}},this._panel={numberOfInactive:7,height:100,backtrace:{active:!1},breakpoints:{active:!1},watch:{active:!1},chart:{active:!1,width:0,height:0},run:{active:!1},output:{active:!1},console:{active:!1}},this._editor={minTabHeight:34,active:!1}}return a(t,[{key:"isSidenavOpened",value:function(){return this._sidenav.opened}},{key:"toggleSidenav",value:function(){this._sidenav.opened?(this._sidenav.opened=!1,e("#left-sidenav").css("width",this._sidenav.closedWidth+"px"),e("#main-wrapper").css("margin-left",this._sidenav.closedWidth+"px")):(this._sidenav.opened=!0,e("#left-sidenav").css("width",this._sidenav.openedWidth+"px"),e("#main-wrapper").css("margin-left",this._sidenav.openedWidth+"px")),this.getPanelProperty("backtrace.active")&&e("#backtrace-table").floatThead("reflow"),this.getPanelProperty("breakpoints.active")&&e("#breakpoints-table").floatThead("reflow")}},{key:"isSidenavExtraOpened",value:function(){return this._sidenavExtra.opened}},{key:"getLastOpenedSidenavExtra",value:function(){return this._sidenavExtra.last}},{key:"toggleSidenavExtra",value:function(t){var n=t.split("-")[0];this._sidenavExtra.opened?(this._sidenavExtra.last===t?(this._sidenavExtra.opened=!1,e("#sidenav-extra-modal").hide(),e(".sidenav-extra").hide(),e("#"+t).hide(),e("#sidenav-toggle-"+n).removeClass("active-sidenav-button")):(e("#"+this._sidenavExtra.last).hide(),e("#"+t).show(),e("#sidenav-toggle-"+this._sidenavExtra.last.split("-")[0]).removeClass("active-sidenav-button"),e("#sidenav-toggle-"+n).addClass("active-sidenav-button")),this._sidenavExtra.newFile.opened&&(this._sidenavExtra.newFile.opened=!1,e("#hidden-new-file").hide())):(this._sidenavExtra.opened=!0,e("#sidenav-extra-modal").show(),e(".sidenav-extra").show(),e("#"+t).show(),e("#sidenav-toggle-"+n).addClass("active-sidenav-button")),this._sidenavExtra.last=t}},{key:"toggleSidenavNewFile",value:function(){this._sidenavExtra.newFile.opened?(this._sidenavExtra.newFile.opened=!1,e("#hidden-new-file").hide(),e("#new-file-name").val(""),e("#hidden-new-file-info").empty()):(this._sidenavExtra.newFile.opened=!0,e("#hidden-new-file").fadeIn("fast"))}},{key:"togglePanel",value:function(t){this._panel[t].active?(this._panel[t].active=!1,e("#sidenav-toggle-"+t).removeClass("active-sidenav-button"),e("#"+t+"-wrapper").hide(),e("#"+t+"-wrapper").addClass("hidden-panel"),this._panel.numberOfInactive++):(this._panel[t].active=!0,e("#sidenav-toggle-"+t).addClass("active-sidenav-button"),e("#"+t+"-wrapper").show(),e("#"+t+"-wrapper").removeClass("hidden-panel"),this._panel.numberOfInactive--),this.getPanelProperty("backtrace.active")&&e("#backtrace-table").floatThead("reflow"),this.getPanelProperty("breakpoints.active")&&e("#breakpoints-table").floatThead("reflow"),this._panel.numberOfInactive===this.getPanelsNumber()?(e("#editor-wrapper").css("width","100%"),e("#editor-wrapper").css("padding-left",0),e("#info-panels").hide()):this._panel.numberOfInactive>0&&!e("#info-panels").is(":visible")&&(e("#editor-wrapper").css("padding-left",4),e("#editor-wrapper").css("width",this.editorHorizontalPercentage()+"%"),e("#info-panels").show()),this.resetPanelsPercentage(),e(".vertical-resizable").not(".hidden-panel").each(function(t,n){0===t?e(n).children(".col-md-12").css("padding-top",0):e(n).children(".col-md-12").css("padding-top",4),t===e(".vertical-resizable").not(".hidden-panel").length-1?e(n).children(".ui-resizable-s").hide():e(n).children(".ui-resizable-s").show()})}},{key:"toggleButton",value:function(t,n){t?e("#"+n).removeClass("disabled"):e("#"+n).addClass("disabled")}},{key:"buttonIsDisabled",value:function(t){return e(t).is("i")?!!e(t).parent().hasClass("disabled"):!!e(t).hasClass("disabled")}},{key:"toggleSettingItem",value:function(t,n){t?e("#"+n).parent().removeClass("disabled"):e("#"+n).parent().addClass("disabled")}},{key:"settingItemIsDisabled",value:function(t){return!!e("#"+t).parent().hasClass("disabled")}},{key:"getPanelProperty",value:function(e){return e?(e=e.split("."),2===e.length&&void 0!==this._panel[e[0]][e[1]]?this._panel[e[0]][e[1]]:1===e.length&&void 0!==this._panel[e[0]]?this._panel[e[0]]:null):null}},{key:"appendChooserLi",value:function(t,n,i,a,s,o){t.append(e('<li class="bg-white cupload '+n+'" id="'+a+'" data-sid="'+s+'"><span>'+o+'</span><div class="handle '+i+'"><i class="fa fa-circle"></i></div></li>'))}},{key:"changeUploadColor",value:function(t,n){var i=e('li.cupload[data-sid="'+n+'"]');switch(i.removeClass("bg-danger bg-warning bg-success bg-white"),t){case this.COLOR.RED:i.addClass("bg-danger");break;case this.COLOR.YELLOW:i.addClass("bg-warning");break;case this.COLOR.GREEN:i.addClass("bg-success");break;case this.COLOR.WHITE:default:i.addClass("bg-white")}}},{key:"updateRunPanel",value:function(t,n,i){var a=this,o=e("#run-chooser-src"),r=e("#run-chooser-dest"),l="run-ok-button",u="run-clear-button",d="run-right-button",h="run-left-button";if(t===c.ALL||t===c.LIST){o.html(""),r.html(""),i.getAllData().forEach(function(e){e.scheduled||a.appendChooserLi(o,"","hidden","run-"+e.name,e.id,e.name)});var f=i.getUploadBackupList();if(f.length)for(var p in f)if(f.hasOwnProperty(p)){var g=i.getFileDataById(f[p]);0===f[p]?this.appendChooserLi(r,"","hidden","run-context-reset-sid",0,"Context Reset"):this.appendChooserLi(r,"sortable","","run-"+g.name,g.id,g.name),i.isFileInUploadList(f[p])||-1==i.getUploadBackupList().indexOf(f[p])||this.changeUploadColor(this.COLOR.GREEN,f[p])}}t===c.CR&&r.children("li").each(function(t,n){e(n).hasClass("bg-success")||0==e(n).data("sid")||a.changeUploadColor(a.COLOR.RED,e(n).data("sid"))}),t!==c.ALL&&t!==c.BUTTON||(i.isUploadStarted()?(this.toggleButton(!1,l),this.toggleButton(!1,u),this.toggleButton(!1,d),this.toggleButton(!1,h),this.toggleButton(!0,"run-context-reset-button")):(o.is(":empty")?this.toggleButton(!1,d):this.toggleButton(!0,d),r.is(":empty")?(this.toggleButton(!1,h),this.toggleButton(!1,u)):(this.toggleButton(!0,h),this.toggleButton(!0,u)),n&&n.getEngineMode()===s.ENGINE_MODE.CLIENT_SOURCE&&i.isUploadAndRunAllowed()&&!i.isUploadStarted()&&!r.is(":empty")?this.toggleButton(!0,l):this.toggleButton(!1,l))),t!==c.ALL&&t!==c.JQUI||(i.isUploadStarted()?(r.sortable("disable"),r.selectable("disable"),o.selectable("disable"),o.css("opacity",.7),r.css("opacity",.7)):(r.sortable("enable"),r.selectable("enable"),o.selectable("enable"),o.css("opacity",1),r.css("opacity",1)))}},{key:"updateWatchPanelList",value:function(t){if(t){e("#watch-list").html("");for(var n in t)t.hasOwnProperty(n)&&this.appendWatchLi(n,t[n])}}},{key:"appendWatchLi",value:function(t,n){e("#watch-list").append(e("<li><span>"+t+" : </span><span>"+n+'</span><div class="watch-li-remove" data-rid="'+t+'" title="Remove Expression"><i class="fa fa-minus"></i></div></li>'))}},{key:"updateWatchPanelButtons",value:function(t){t&&t.getEngineMode()===s.ENGINE_MODE.BREAKPOINT&&!e("#watch-list").is(":empty")?this.toggleButton(!0,"watch-refresh-button"):this.toggleButton(!1,"watch-refresh-button"),e("#watch-list").is(":empty")?this.toggleButton(!1,"watch-clear-button"):this.toggleButton(!0,"watch-clear-button")}},{key:"setChartPanelWidth",value:function(e){this._panel.chart.width=e}},{key:"setChartPanelHeight",value:function(e){this._panel.chart.height=e}},{key:"initChartPanel",value:function(t){this.setChartPanelWidth(e("#chart-wrapper").width()),this.setChartPanelHeight(e("#chart-wrapper").height()),t.initChart(),t.resizeChart(this.getPanelProperty("chart.height"),this.getPanelProperty("chart.width"))}},{key:"editorHorizontalPercentage",value:function(){var t=this._panel.numberOfInactive===Object.keys(this._panel).length-2?0:e("#info-panels").width();return(e("#workspace-wrapper").width()-t)/e("#workspace-wrapper").width()*100}},{key:"continueCommand",value:function(){this.continueStopButtonState(l.STOP),e("#step-button").addClass("disabled"),e("#next-button").addClass("disabled")}},{key:"stopCommand",value:function(){this.continueStopButtonState(l.CONTINUE),e("#step-button").removeClass("disabled"),e("#next-button").removeClass("disabled")}},{key:"disableActionButtons",value:function(t){t?e(".debugger-action-button").each(function(t,n){e(n).addClass("disabled")}):e(".debugger-action-button").each(function(t,n){e(n).removeClass("disabled")})}},{key:"continueStopButtonState",value:function(t){switch(t){case l.STOP:e("#continue-stop-button i").removeClass("fa-play"),e("#continue-stop-button i").addClass("fa-stop");break;case l.CONTINUE:e("#continue-stop-button i").removeClass("fa-stop"),e("#continue-stop-button i").addClass("fa-play")}}},{key:"generateFunctionLog",value:function(e,t,n){var i={line:e.func.line,column:e.func.column};t.getValue("debugger.transpileToES5")&&!n.isEmpty()&&(i=n.getOriginalPositionFor(e.func.sourceName.split("/").pop(),i.line,i.column));var a="() at line: "+i.line+", col: "+i.column;return e.func.name||e.func.is_func?!e.func.name&&e.func.is_func?"function"+a:e.func.name+a:"-"}},{key:"updateBacktracePanel",value:function(t,n,i,a){var s=n.func.sourceName||n,o=e("#backtrace-table-body"),l=n.line||"-";i.getValue("debugger.transpileToES5")&&!a.isEmpty()&&(l=a.getOriginalPositionFor(s.split("/").pop(),l,0).line),o.append("<tr><td>"+t+"</td><td>"+s+"</td><td>"+l+"</td><td>"+this.generateFunctionLog(n,i,a)+"</td></tr>"),r.default.scrollDown(o)}},{key:"updateBreakpointsPanel",value:function(t,n,i){var a=e("#breakpoints-table-body");r.default.clearElement(a);for(var s in t)if(t.hasOwnProperty(s)){var o=t[s].func.sourceName||"-",l=t[s].index||"-",c=t[s].line||"-";n.getValue("debugger.transpileToES5")&&!i.isEmpty()&&(c=i.getOriginalPositionFor(o.split("/").pop(),c,0).line),a.append("<tr><td>"+o+"</td><td>"+c+"</td><td>"+l+"</td><td>"+this.generateFunctionLog(t[s],n,i)+"</td></tr>")}r.default.scrollDown(a)}},{key:"resetPanelsPercentage",value:function(){e(".vertical-resizable").css("height",100/this.getPanelsDivisor()+"%")}},{key:"getPanelsNumber",value:function(){return e("#info-panels").children(".vertical-resizable").length}},{key:"getPanelsDivisor",value:function(){return this.getPanelsNumber()-this._panel.numberOfInactive}},{key:"getEditorContainerDimensions",value:function(){return{width:e("#editor-container").width(),height:e("#editor-container").height()}}},{key:"showEditor",value:function(){this._editor.active||(this._editor.active=!0,e("#monaco").show(),e("#file-tabs-placeholder").hide(),e("#editor-placeholder").hide())}},{key:"hideEditor",value:function(){this._editor.active&&(this._editor.active=!1,e("#monaco").hide(),e("#file-tabs-placeholder").show(),e("#editor-placeholder").show())}},{key:"reset",value:function(){this.toggleButton(!1,"run-context-reset-button"),r.default.clearElement(e("#breakpoints-table-body"))}}]),t}();t.default=u}).call(t,n("c/5P"))},"4vYf":function(e,t,n){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),s=(t.MARKER_TYPE={EXECUTE:"execute",EXCEPTION:"exception"},function(){function e(t){i(this,e),this._editor=t,this._decoration=[],this._item=null}return a(e,[{key:"set",value:function(e,t){this._item={type:e,line:t,object:o(e,t)},this.render()}},{key:"render",value:function(){var e=this._item?[this._item.object]:[];this._decoration=this._editor.deltaDecorations(this._decoration,e)}},{key:"remove",value:function(){this._item=null,this.render()}},{key:"decoration",get:function(){return this._decoration}},{key:"item",get:function(){return this._item}}]),e}());t.default=s;var o=function(e,t){return{range:new window.monaco.Range(t,1,t,1),options:{isWholeLine:!0,className:e+"-marker",marginClassName:e+"-gutter-marker"}}}},"8s/G":function(e,t){},ASWD:function(e,t){},DWNp:function(e,t){},JkW7:function(e,t,n){"use strict";var i=n("akvE"),a=function(e){return e&&e.__esModule?e:{default:e}}(i);(0,a.default)()},LEPx:function(e,t,n){"use strict";(function(e){function i(e){return e&&e.__esModule?e:{default:e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0}),t.ENGINE_MODE=t.PROTOCOL=t.JERRY_DEBUGGER_VERSION=void 0;var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),o=n("ZBmJ"),r=i(o),l=n("zb0f"),c=i(l),u=n("lOm7"),d=i(u),h=n("bqMR"),f=i(h),p=n("yvHB"),g=i(p),b=n("2QIY"),m=(t.JERRY_DEBUGGER_VERSION=2,t.PROTOCOL={SERVER:{JERRY_DEBUGGER_CONFIGURATION:1,JERRY_DEBUGGER_PARSE_ERROR:2,JERRY_DEBUGGER_BYTE_CODE_CP:3,JERRY_DEBUGGER_PARSE_FUNCTION:4,JERRY_DEBUGGER_BREAKPOINT_LIST:5,JERRY_DEBUGGER_BREAKPOINT_OFFSET_LIST:6,JERRY_DEBUGGER_SOURCE_CODE:7,JERRY_DEBUGGER_SOURCE_CODE_END:8,JERRY_DEBUGGER_SOURCE_CODE_NAME:9,JERRY_DEBUGGER_SOURCE_CODE_NAME_END:10,JERRY_DEBUGGER_FUNCTION_NAME:11,JERRY_DEBUGGER_FUNCTION_NAME_END:12,JERRY_DEBUGGER_WAITING_AFTER_PARSE:13,JERRY_DEBUGGER_RELEASE_BYTE_CODE_CP:14,JERRY_DEBUGGER_MEMSTATS_RECEIVE:15,JERRY_DEBUGGER_BREAKPOINT_HIT:16,JERRY_DEBUGGER_EXCEPTION_HIT:17,JERRY_DEBUGGER_EXCEPTION_STR:18,JERRY_DEBUGGER_EXCEPTION_STR_END:19,JERRY_DEBUGGER_BACKTRACE:20,JERRY_DEBUGGER_BACKTRACE_END:21,JERRY_DEBUGGER_EVAL_RESULT:22,JERRY_DEBUGGER_EVAL_RESULT_END:23,JERRY_DEBUGGER_WAIT_FOR_SOURCE:24,JERRY_DEBUGGER_OUTPUT_RESULT:25,JERRY_DEBUGGER_OUTPUT_RESULT_END:26,JERRY_DEBUGGER_EVAL_OK:1,JERRY_DEBUGGER_EVAL_ERROR:2,JERRY_DEBUGGER_OUTPUT_OK:1,JERRY_DEBUGGER_OUTPUT_ERROR:2,JERRY_DEBUGGER_OUTPUT_WARNING:3,JERRY_DEBUGGER_OUTPUT_DEBUG:4,JERRY_DEBUGGER_OUTPUT_TRACE:5},CLIENT:{JERRY_DEBUGGER_FREE_BYTE_CODE_CP:1,JERRY_DEBUGGER_UPDATE_BREAKPOINT:2,JERRY_DEBUGGER_EXCEPTION_CONFIG:3,JERRY_DEBUGGER_PARSER_CONFIG:4,JERRY_DEBUGGER_MEMSTATS:5,JERRY_DEBUGGER_STOP:6,JERRY_DEBUGGER_PARSER_RESUME:7,JERRY_DEBUGGER_CLIENT_SOURCE:8,JERRY_DEBUGGER_CLIENT_SOURCE_PART:9,JERRY_DEBUGGER_NO_MORE_SOURCES:10,JERRY_DEBUGGER_CONTEXT_RESET:11,JERRY_DEBUGGER_CONTINUE:12,JERRY_DEBUGGER_STEP:13,JERRY_DEBUGGER_NEXT:14,JERRY_DEBUGGER_FINISH:15,JERRY_DEBUGGER_GET_BACKTRACE:16,JERRY_DEBUGGER_EVAL:17,JERRY_DEBUGGER_EVAL_PART:18}}),_=t.ENGINE_MODE={DISCONNECTED:0,RUN:1,BREAKPOINT:2,CLIENT_SOURCE:3},y=function(){function t(n,i,s,o,l){a(this,t),this._logger=new f.default(e("#console-panel")),this._transpiler=new c.default,this._session=i,this._surface=s,this._settings=o,this._verison=0,this._maxMessageSize=0,this._cpointerSize=0,this._littleEndian=!0,this._functions={},this._sources={},this._lineList=new Map,this._breakpoints=new g.default,this._backtraceFrame=0,this._alive=!1,this._mode={current:_.DISCONNECTED,last:null},this._connection=new r.default(this,n,this._surface,this._session,this._settings,l)}return s(t,[{key:"getProtocolVersion",value:function(){return this._verison}},{key:"setProtocolVersion",value:function(e){this._verison=e}},{key:"getMaxMessageSize",value:function(){return this._maxMessageSize}},{key:"setMaxMessageSize",value:function(e){this._maxMessageSize=e}},{key:"getCPointerSize",value:function(){return this._cpointerSize}},{key:"setCPointerSize",value:function(e){this._cpointerSize=e}},{key:"isLittleEndian",value:function(){return this._littleEndian}},{key:"setLittleEndian",value:function(e){this._littleEndian=e}},{key:"getBacktraceFrame",value:function(){return this._backtraceFrame}},{key:"setBacktraceFrame",value:function(e){this._backtraceFrame=e}},{key:"getFunctions",value:function(){return this._functions}},{key:"setFunctions",value:function(e,t){this._functions[e]=t}},{key:"getSources",value:function(){return this._sources}},{key:"setSources",value:function(e,t){this._sources[e]=t}},{key:"getEngineMode",value:function(){return this._mode.current}},{key:"setEngineMode",value:function(e){this._mode.last=this._mode.current,this._mode.current=e,e===_.CLIENT_SOURCE||e===_.DISCONNECTED?this._surface.toggleSettingItem(!0,"transpileToES5"):this._surface.toggleSettingItem(!1,"transpileToES5")}},{key:"closeConnection",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";this._connection.close(e)}},{key:"abortConnection",value:function(e){this._connection.abort(e)}},{key:"concatUint8Arrays",value:function(e,t){if(t.byteLength<=1)return e;if(!e)return t.slice(1);var n=e.byteLength,i=t.byteLength-1,a=new Uint8Array(n+i);return a.set(t,n-1),a.set(e),a}},{key:"cesu8ToString",value:function(e){if(!e)return"";for(var t=e.byteLength,n=0,i="";n<t;){var a=e[n];++n,a>=127&&(32&a?(a=(15&a)<<12|(63&e[n])<<6|63&e[n+1],n+=2):(a=(31&a)<<6|63&e[n],++n)),i+=String.fromCharCode(a)}return i}},{key:"decodeMessage",value:function(e,t,n){var i=[],a=void 0;n||(n=0),n+this.getFormatSize(e)>t.byteLength&&this._connection.abort("received message is too short.");for(var s in e)"B"!==e[s]?"C"!==e[s]||2!==this._cpointerSize?(d.default.assert("I"===e[s]||"C"===e[s]&&4===this._cpointerSize),a=this._littleEndian?t[n]|t[n+1]<<8|t[n+2]<<16|t[n+3]<<24:t[n]<<24|t[n+1]<<16|t[n+2]<<8|t[n+3]<<24,i.push(a),n+=4):(a=this._littleEndian?t[n]|t[n+1]<<8:t[n]<<8|t[n+1],i.push(a),n+=2):(i.push(t[n]),n++);return i}},{key:"encodeMessage",value:function(e,t){var n=this.getFormatSize(e),i=new Uint8Array(n),a=0;for(var s in e)if(e.hasOwnProperty(s)){var o=t[s];if("B"===e[s]){i[a]=o,a++;continue}if("C"===e[s]&&2===this._cpointerSize){this._littleEndian?(i[a]=255&o,i[a+1]=o>>8&255):(i[a]=o>>8&255,i[a+1]=255&o),a+=2;continue}this.setUint32(i,a,o),a+=4}this._connection.send(i)}},{key:"getBreakpoint",value:function(e){var t={},n=this._functions[e[0]],i=e[1];if(i in n.offsets)return t.breakpoint=n.offsets[i],t.at=!0,t;if(i<n.firstBreakpointOffset)return t.breakpoint=n.offsets[n.firstBreakpointOffset],t.at=!0,t;var a=-1;for(var s in n.offsets)s<=i&&s>a&&(a=s);return t.breakpoint=n.offsets[a],t.at=!1,t}},{key:"setBreakpoint",value:function(e,t){var n=/^(.+):([1-9][0-9]*)$/.exec(e),i=!1;if(n){var a=this._lineList.get(n[2]),s=!0,o=!1,r=void 0;try{for(var l,c=a[Symbol.iterator]();!(s=(l=c.next()).done);s=!0){var u=l.value,d=u.sourceName;(d===n[1]||d.endsWith("/"+n[1])||d.endsWith("\\"+n[1]))&&(this.insertBreakpoint(u.lines[n[2]]),i=!0)}}catch(e){o=!0,r=e}finally{try{!s&&c.return&&c.return()}finally{if(o)throw r}}}else for(var h in this._functions)if(this._functions.hasOwnProperty(h)){var f=this._functions[h];f.name===e&&(this.insertBreakpoint(f.lines[f.firstBreakpointLine]),i=!0)}if(!i){if(this._logger.info("Breakpoint not found"),!t)return!1;this._breakpoints.pendingBreakpoints.length||this.sendParserConfig(1),n?(this._breakpoints.pendingBreakpoints.push({line:n[1],function:"",sourceName:n[0]}),this._logger.info("Pending breakpoint index: "+n[0]+" added")):(this._breakpoints.pendingBreakpoints.push({line:null,function:e,sourceName:null}),this._logger.info("Pending breakpoint function name: "+e+" added"))}return this._surface.updateBreakpointsPanel(this._breakpoints.activeBreakpoints,this._settings,this._transpiler),!0}},{key:"sendExceptionConfig",value:function(e){if(""===e)return void this._logger.error("Argument required",!0);if(1===e)this._logger.info("Stop at exception enabled");else{if(0!==e)return void this._logger.info("Invalid input. Usage 1: [Enable] or 0: [Disable].");this._logger.info("Stop at exception disabled")}this.encodeMessage("BB",[m.CLIENT.JERRY_DEBUGGER_EXCEPTION_CONFIG,e])}},{key:"sendParserConfig",value:function(e){if(void 0===e)return void this._logger.error("Parser config argument is required.",!0);this.encodeMessage("BB",[m.CLIENT.JERRY_DEBUGGER_PARSER_CONFIG,e])}},{key:"insertBreakpoint",value:function(e){var t=this._breakpoints.nextIndex;if(e.index<0){this._breakpoints.addActiveBreakpoint(e.line,e.offset,e.func,t),this._breakpoints.increaseNextIndex();var n=[m.CLIENT.JERRY_DEBUGGER_UPDATE_BREAKPOINT,1,e.func.byte_code_cp,e.offset];this.encodeMessage("BBCI",n)}this._logger.info("Breakpoint "+t+" at "+this.breakpointToString(e))}},{key:"deleteBreakpoint",value:function(e){var t=this._breakpoints.getActiveBreakpointByIndex(e);if("all"===e){var n=!1,i=this._breakpoints.activeBreakpoints;for(var a in i)i.hasOwnProperty(a)&&(this.deleteBreakpoint(i[a].index),n=!0);return void(n||this._logger.info("No active breakpoints."))}if(!t)return void this._logger.error("No breakpoint found with index "+e,!0);d.default.assert(t&&t.index===e),this._breakpoints.deleteActiveBreakpointByIndex(e);var s=[m.CLIENT.JERRY_DEBUGGER_UPDATE_BREAKPOINT,0,t.func.byte_code_cp,t.offset];this.encodeMessage("BBCI",s),this._logger.info("Breakpoint "+e+" deleted."),this._surface.updateBreakpointsPanel(this._breakpoints.activeBreakpoints,this._settings,this._transpiler)}},{key:"deletePendingBreakpoint",value:function(e){e>=this._breakpoints.pendingBreakpoints.length?this._logger.info("Pending breakpoint not found"):(this._breakpoints.deletePendingBreakpointByIndex(e),this._logger.info("Pending breakpoint "+e+" deleted."))}},{key:"listBreakpoints",value:function(){this._logger.info("List of active breakpoints:");var e=!1;for(var t in this._breakpoints.activeBreakpoints)this._breakpoints.activeBreakpoints.hasOwnProperty(t)&&(this._logger.info("  breakpoint "+t+" at "+this.breakpointToString(this._breakpoints.activeBreakpoints[t])),e=!0);if(e||this._logger.info("  no active breakpoints"),0!==this._breakpoints.pendingBreakpoints.length){this._logger.info("List of pending breakpoints:");for(var n in this._breakpoints.pendingBreakpoints)this._breakpoints.pendingBreakpoints.hasOwnProperty(n)&&this._logger.info("  pending breakpoint "+n+" at "+this.pendingBreakpointToString(this._breakpoints.pendingBreakpoints[n]))}else this._logger.info("No pending breakpoints")}},{key:"sendResumeExec",value:function(e){if(this._mode.current!==_.BREAKPOINT)return void this._logger.error("This command is allowed only if JavaScript execution is stopped at a breakpoint.");this.encodeMessage("B",[e]),this._lastBreakpointHit=null}},{key:"getBacktrace",value:function(){if(this._mode.current!==_.BREAKPOINT)return void this._logger.error("This command is allowed only if JavaScript execution is stopped at a breakpoint.",!0);var t=e("#backtrace-depth").val(),n=0;0!==t&&/[1-9][0-9]*/.test(t)&&(n=parseInt(t)),this._mode.current===_.BREAKPOINT&&this.encodeMessage("BI",[m.CLIENT.JERRY_DEBUGGER_GET_BACKTRACE,n])}},{key:"sendEval",value:function(e){if(this._mode.current!==_.BREAKPOINT)return void this._logger.error("This command is allowed only if JavaScript execution is stopped at a breakpoint.",!0);if(""===e)return void this._logger.error("Argument required",!0);var t=this.stringToCesu8(e),n=t.byteLength;if(n<=this._maxMessageSize)return void this._connection.send(t);this._connection.send(t.slice(0,this._maxMessageSize));for(var i=this._maxMessageSize-1;i<n;)t[i]=m.CLIENT.JERRY_DEBUGGER_EVAL_PART,this._connection.send(t.slice(i,i+this._maxMessageSize)),i+=this._maxMessageSize-1}},{key:"sendClientSource",value:function(){if(this._mode.current!==_.CLIENT_SOURCE)return void this._logger.error("This command is allowed only if the engine is waiting for a source.",!0);if(!this._session.getUploadList().length||!this._session.isUploadStarted())return void this._logger.info("The engine is waiting for a source.",!0);this.setEngineMode(_.RUN);var e=this._session.getUploadList()[0];if(0===e)return this.encodeMessage("B",[m.CLIENT.JERRY_DEBUGGER_CONTEXT_RESET]),this._session.shiftUploadList(),this._session.setContextReset(!0),this._surface.changeUploadColor(b.SURFACE_COLOR.GREEN,e),void this._session.allowUploadAndRun(!1);this._surface.disableActionButtons(!1);var t=this._session.getFileModelById(e).getValue();if(this._settings.getValue("debugger.transpileToES5")&&!this._transpiler.isEmpty()){if(!this._transpiler.transformToES5(this._session.getFileNameById(e),this._session.getFileModelById(e)))return this.encodeMessage("B",[m.CLIENT.JERRY_DEBUGGER_CONTEXT_RESET]),this._session.resetUploadList(),this._session.shiftUploadList(),this._session.setContextReset(!0),void this._session.allowUploadAndRun(!1);t=this._transpiler.getTransformedSource(this._session.getFileNameById(e))}var n=this.stringToCesu8(this._session.getFileNameById(e)+"\0"+t),i=n.byteLength;if(n[0]=m.CLIENT.JERRY_DEBUGGER_CLIENT_SOURCE,i<=this._maxMessageSize)return this._connection.send(n),this._session.shiftUploadList(),this._session.allowUploadAndRun(!1),void this._surface.changeUploadColor(b.SURFACE_COLOR.GREEN,e);this._connection.send(n.slice(0,this._maxMessageSize));for(var a=this._maxMessageSize-1;a<i;)n[a]=m.CLIENT.JERRY_DEBUGGER_CLIENT_SOURCE_PART,this._connection.send(n.slice(a,a+this._maxMessageSize)),a+=this._maxMessageSize-1;this._session.shiftUploadList(),this._session.allowUploadAndRun(!1),this._surface.changeUploadColor(b.SURFACE_COLOR.GREEN,e)}},{key:"printSource",value:function(){this._breakpoints.lastHit&&this._logger.info(this._breakpoints.lastHit.func.source)}},{key:"dump",value:function(){for(var e in this._functions)if(this._functions.hasOwnProperty(e)){var t=this._functions[e],n=t.sourceName;n||(n="<unknown>"),this._logger.info("Function 0x"+Number(e).toString(16)+" '"+t.name+"' at "+n+":"+t.line+", "+t.column);for(var i in t.lines)if(t.lines.hasOwnProperty(i)){var a="";t.lines[i].active>=0&&(a=" (active: "+t.lines[i].active+")"),this._logger.info("  Breakpoint line: "+i+" at memory offset: "+t.lines[i].offset+" "+a)}}}},{key:"getBreakpointLines",value:function(){var e=[];for(var t in this._functions)if(this._functions.hasOwnProperty(t)){var n=this._functions[t];for(var i in n.lines)n.lines.hasOwnProperty(i)&&e.push({line:parseInt(i),sourceName:n.sourceName})}return e}},{key:"breakpointToString",value:function(e){var t=e.func.sourceName;t||(t="[unknown]");var n=e.line;if(this._settings.getValue("debugger.transpileToES5")&&!this._transpiler.isEmpty()&&(n=this._transpiler.getOriginalPositionFor(this._session.getFileNameById(this._session.getActiveID()),n,0).line),t+=":"+n,e.func.is_func){var i=e.func,a={line:i.line,column:i.column};this._settings.getValue("debugger.transpileToES5")&&!this._transpiler.isEmpty()&&(a=this._transpiler.getOriginalPositionFor(this._session.getFileNameById(this._session.getActiveID()),a.line,a.column)),t+=" (in "+(i.name?i.name:"function")+"() at line:"+a.line+", col:"+a.column+")"}return t}},{key:"pendingBreakpointToString",value:function(e){return e.function?'"'+e.function+'"':'"'+e.sourceName+":"+e.line+'"'}},{key:"setUint32",value:function(e,t,n){this._littleEndian?(e[t]=255&n,e[t+1]=n>>8&255,e[t+2]=n>>16&255,e[t+3]=n>>24&255):(e[t]=n>>24&255,e[t+1]=n>>16&255,e[t+2]=n>>8&255,e[t+3]=255&n)}},{key:"stringToCesu8",value:function(e){d.default.assert(""!=e);for(var t=e.length,n=t,i=0;i<t;i++){var a=e.charCodeAt(i);a>=2047&&n++,a>=127&&n++}var s=new Uint8Array(n+1+4);s[0]=m.CLIENT.JERRY_DEBUGGER_EVAL,this.setUint32(s,1,n);for(var o=5,r=0;r<t;r++){var l=e.charCodeAt(r);l>=2047?(s[o]=224|l>>12,s[o+1]=128|l>>6&63,s[o+2]=128|63&l,o+=3):l>=127?(s[o]=192|l>>6,s[o+1]=128|63&l):(s[o]=l,o++)}return s}},{key:"getFormatSize",value:function(e){var t=0;for(var n in e)"B"!==e[n]?"C"!==e[n]?(d.default.assert("I"==e[n]),t+=4):t+=this._cpointerSize:t++;return t}},{key:"releaseFunction",value:function(e){var t=this.decodeMessage("C",e,1)[0],n=this._functions[t];for(var i in n.lines)if(n.lines.hasOwnProperty(i)){this._lineList.set(i,this._debuggerObj.lineList.get(i).filter(function(e){return!Object.is(e,n)}));var a=n.lines[i];d.default.assert(i==a.line),a.index>=0&&this._breakpoints.deleteActiveBreakpointByIndex(a.index)}delete this._functions[t],e[0]=m.CLIENT.JERRY_DEBUGGER_FREE_BYTE_CODE_CP,this._connection.send(e)}},{key:"breakpoints",get:function(){return this._breakpoints}},{key:"lineList",get:function(){return this._lineList}}]),t}();t.default=y}).call(t,n("c/5P"))},Lo4h:function(e,t,n){"use strict";(function(e){function i(e){return e&&e.__esModule?e:{default:e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0}),t.SOURCE_SNYC_ACTION=void 0;var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),o=n("LEPx"),r=n("2QIY"),l=n("1Xt6"),c=i(l),u=n("4vYf"),d=i(u),h=n("lOm7"),f=i(h),p="/**\n * IoT.js Code\n * Browser based IDE including debugger for IoT.js.\n */\n",g=t.SOURCE_SNYC_ACTION={NOP:0,LOAD:1,RELOAD:2},b=function(){function t(e,n){a(this,t),this._environment=e,this._surface=n,this._id={next:0,last:0,active:0,uNext:0},this._models=[],this._command={list:[],counter:-1},this._lastBreakpoint=null,this._chartInfo=null,this._upload={list:[],backupList:[],allowed:!1,started:!1},this._marker=new d.default(this._environment.editor),this._glyph=new c.default(this._environment.editor),this._watch={work:{inProgress:!1,currentExpr:"",update:!1,counter:0},list:{}},this._jerrySource={name:"",source:"",reset:!0,action:g.NOP},this._contextReset=!1}return s(t,[{key:"getNextID",value:function(){return this._id.next}},{key:"getActiveID",value:function(){return this._id.active}},{key:"getCommandCounter",value:function(){return this._command.counter}},{key:"setCommandCounter",value:function(e){this._command.counter=e}},{key:"getCommandList",value:function(){return this._command.list}},{key:"addCommandToList",value:function(e){this._command.list.push(e)}},{key:"isContextReset",value:function(){return this._contextReset}},{key:"setContextReset",value:function(e){this._contextReset=e}},{key:"isUploadAndRunAllowed",value:function(){return this._upload.allowed}},{key:"allowUploadAndRun",value:function(e){this._upload.allowed=e}},{key:"isUploadStarted",value:function(){return this._upload.started}},{key:"setUploadStarted",value:function(e){this._upload.started=e}},{key:"resetUploadList",value:function(){this._upload.list=[0]}},{key:"addFileToUploadList",value:function(e,t){0!==e&&(this.getFileDataById(e).scheduled=!0),this._upload.list.splice(t,0,e),this.createUploadBackupList()}},{key:"moveFileInUploadList",value:function(e,t){this._upload.list.splice(t,0,this._upload.list.splice(e,1)[0]),this.createUploadBackupList()}},{key:"removeFileFromUploadList",value:function(e){this.getFileDataById(e)&&(this.getFileDataById(e).scheduled=!1),this._upload.list.splice(this._upload.list.indexOf(e),1),this.createUploadBackupList()}},{key:"isFileInUploadList",value:function(e){return-1!=this._upload.list.indexOf(e)}},{key:"createUploadBackupList",value:function(){this._upload.backupList=this._upload.list.slice()}},{key:"getUploadBackupList",value:function(){return this._upload.backupList}},{key:"getUploadList",value:function(){return this._upload.list}},{key:"shiftUploadList",value:function(){this._upload.list.shift()}},{key:"isWatchInProgress",value:function(){return this._watch.work.inProgress}},{key:"stopWatchProgress",value:function(){this._watch.work.inProgress=!1}},{key:"getWatchCurrentExpr",value:function(){return this._watch.work.currentExpr}},{key:"addWatchExpression",value:function(e,t){this._watch.list[t]="&ltnot available&gt",e&&e.getEngineMode()===o.ENGINE_MODE.BREAKPOINT?(this._watch.work.inProgress=!0,this._watch.work.currentExpr=t,e.sendEval(t)):(this._surface.updateWatchPanelList(this._watch.list),this._surface.updateWatchPanelButtons(e))}},{key:"addWatchExpressionValue",value:function(e,t,n){this._watch.list[t]&&(""!==n&&(this._watch.list[t]=n),this._watch.work.update&&this._watch.work.counter<Object.keys(this._watch.list).length?this.updateWatchExpressions(e):(this._watch.work.update=!1,this._watch.work.counter=0),this._watch.work.update||(this._surface.updateWatchPanelList(this._watch.list),this._surface.updateWatchPanelButtons(e)))}},{key:"updateWatchExpressions",value:function(t){if(t&&t.getEngineMode()===o.ENGINE_MODE.BREAKPOINT&&!e.isEmptyObject(this._watch.list)){this._watch.work.update=!0;var n=Object.keys(this._watch.list)[this._watch.work.counter];this._watch.work.inProgress=!0,this._watch.work.currentExpr=n,t.sendEval(n),this._watch.work.counter++}}},{key:"removeWatchExpression",value:function(e){delete this._watch.list[e]}},{key:"removeAllWatchExpression",value:function(){this._watch.list={}}},{key:"neutralizeWatchExpressions",value:function(){if(Object.keys(this._watch.list).length){for(var e in this._watch.list)this._watch.list.hasOwnProperty(e)&&(this._watch.list[e]="&ltnot available&gt");this._surface.updateWatchPanelList(this._watch.list)}}},{key:"createNewFile",value:function(e,t){var n=window.monaco.editor.createModel(t,"text/javascript");this._models.push({id:++this._id.next,scheduled:!1,name:e,model:n,state:null}),this._surface.showEditor(),1!==this._id.next&&this.isWelcomeFileUntouched()&&this.closeTab(1),this.updateTabs(this._id.next,e),this.switchFile(this._id.next)}},{key:"handleUnknownFile",value:function(e){var t=this.getFileIdByContent(e),n=void 0;return t?(n=this.getFileNameById(t),this.fileContentCheck(n,e)||this.resetFileContent(n,e)):(n="unknown-"+ ++this._id.uNext,this.createNewFile(n,e)),n}},{key:"isWelcomeFileUntouched",value:function(){var e=this.getFileDataById(1);return!(!e||e.scheduled||e.model.getValue()!==p)}},{key:"setWelcomeFile",value:function(){this.createNewFile("welcome.js",p)}},{key:"switchFile",value:function(e){var t=this._id.active;this.unhighlightLine(),this.selectTab(e),this._id.active=e,0!==t&&(this._models.find(function(t){return t.id===e}).state=this._environment.editor.saveViewState()),this._environment.editor.setModel(this.getFileModelById(e)),0!==t&&this._environment.editor.restoreViewState(this.getFileStateById(e)),this._environment.editor.focus(),null!==this._lastBreakpoint&&this._lastBreakpoint.func.sourceName.endsWith(this.getFileNameById(e))&&this.highlightLine(u.MARKER_TYPE.EXECUTE,this._lastBreakpoint.line)}},{key:"getFileNameById",value:function(e){var t=this._models.find(function(t){return t.id===e});return t?t.name:void 0}},{key:"getFileIdByName",value:function(e){var t=this._models.find(function(t){return e.endsWith(t.name)});return t?t.id:void 0}},{key:"getFileIdByContent",value:function(e){var t=this._models.find(function(t){return e===t.model.getValue()});return t?t.id:void 0}},{key:"isFileNameTaken",value:function(e){return!!this._models.find(function(t){return 0===e.localeCompare(t.name)})}},{key:"getFileModelById",value:function(e){var t=this._models.find(function(t){return t.id===e});return t?t.model:void 0}},{key:"getFileStateById",value:function(e){var t=this._models.find(function(t){return t.id===e});return t?t.state:void 0}},{key:"deleteFileByAttr",value:function(e,t){this._models=this._models.filter(function(n){return n[e]!==t}),0===this._models.length&&(this._id.active=0,this._surface.toggleButton(!1,"save-file-button"))}},{key:"changeFileSavedProperty",value:function(e,t){this._data.find(function(t){return t.id===e}).saved=t}},{key:"getFileNeighbourById",value:function(e){for(var t=0;t<this._models.length;t++)if(this._models[t].id===e){if(void 0!==this._models[t-1])return this._models[t-1].id;if(void 0!==this._models[t+1])return this._models[t+1].id}}},{key:"getFileDataById",value:function(e){return this._models.find(function(t){return t.id===e})}},{key:"getAllData",value:function(){return this._models}},{key:"fileNameCheck",value:function(e){return!!this.getFileIdByName(e)}},{key:"fileContentCheck",value:function(e,t){return t===this.getFileModelById(this.getFileIdByName(e)).getValue()}},{key:"resetFileContent",value:function(e,t){var n=this.getFileDataById(this.getFileIdByName(e));n.state=this._environment.editor.saveViewState(),n.model.setValue(t),this._environment.editor.restoreViewState(n.state)}},{key:"markBreakpointLines",value:function(e,t,n){if(e&&e.getEngineMode()!==o.ENGINE_MODE.DISCONNECTED){if(!this._glyph.isFileInitialized(this._id.active)){var i=this.getLinesFromRawData(e.getBreakpointLines(),t,n);if(0!==i.length){i.sort(function(e,t){return e-t}),this._glyph.removeByFile(this._id.active);for(var a=this._environment.editor.getModel().getLineCount();a>0;a--)i.includes(a)&&this._glyph.add(l.GLYPH_TYPE.INACTIVE,this._id.active,a)}}this._glyph.renderByFile(this._id.active)}}},{key:"toggleBreakpoint",value:function(e,t,n,i){this.getLinesFromRawData(t.getBreakpointLines(),n,i).includes(e)&&(this._glyph.isLineActive(this._id.active,e)?(this._glyph.change(this._id.active,e,l.GLYPH_TYPE.INACTIVE),t.deleteBreakpoint(t.breakpoints.getActiveBreakpointIndexByLine(e))):(this._glyph.change(this._id.active,e,l.GLYPH_TYPE.ACTIVE),t.setBreakpoint(this.getFileNameById(this._id.active)+":"+e)),this._glyph.renderByFile(this._id.active))}},{key:"getLinesFromRawData",value:function(e,t,n){var i=[],a=this.getFileNameById(this._id.active);for(var s in e)e[s].sourceName.endsWith(a)&&i.push(e[s].line);if(t.getValue("debugger.transpileToES5")&&!n.isEmpty()){var o=[],r=!0,l=!1,c=void 0;try{for(var u,d=i[Symbol.iterator]();!(r=(u=d.next()).done);r=!0){var h=u.value,f=n.getOriginalPositionFor(this.getFileNameById(this._id.active),h,0);f.line&&o.push(f.line)}}catch(e){l=!0,c=e}finally{try{!r&&d.return&&d.return()}finally{if(l)throw c}}i=o.slice()}return i}},{key:"highlightLine",value:function(e,t){this._environment.editor.revealLineInCenter(t),this._marker.set(e,t)}},{key:"unhighlightLine",value:function(){this._marker.remove()}},{key:"updateTabs",value:function(t,n){var i=this;e("#file-tabs").append('<div class="tablinks" id="tab-'+t+'" title="'+n+'"> '+n+'<i class="fa fa-times" aria-hidden="true"></i></div>'),this._environment.editor.layout(this._surface.getEditorContainerDimensions()),e("#tab-"+t).on("click",function(){i.switchFile(t)}),e("#tab-"+t+" i").on("click",function(){i.closeTab(t)})}},{key:"selectTab",value:function(t){var n=e(".tablinks"),i=!0,a=!1,s=void 0;try{for(var o,r=n[Symbol.iterator]();!(i=(o=r.next()).done);i=!0){var l=o.value;l.className=l.className.replace(" active","")}}catch(e){a=!0,s=e}finally{try{!i&&r.return&&r.return()}finally{if(a)throw s}}e("#tab-"+t).addClass("active")}},{key:"closeTab",value:function(t){if(e("#tab-"+t).remove(),t===this._id.active){var n=this.getFileNeighbourById(t);void 0!==n?this.switchFile(n):this._surface.hideEditor()}this.deleteFileByAttr("id",t),this._environment.editor.layout(this._surface.getEditorContainerDimensions()),this.isFileInUploadList(t)&&this.removeFileFromUploadList(t),this._surface.getPanelProperty("run.active")&&this._surface.updateRunPanel(r.SURFACE_RUN_UPDATE_TYPE.ALL,null,this)}},{key:"storeJerrySource",value:function(e,t){this._jerrySource.name=e.split("/").pop(),this._jerrySource.source=t}},{key:"setJerrySourceAction",value:function(e){this._jerrySource.action=e}},{key:"isAutoSourceSync",value:function(){return this._jerrySource.reset}},{key:"setAutoSourceSync",value:function(e){this._jerrySource.reset=e}},{key:"syncSourceFromJerry",value:function(){switch(this._jerrySource.action){case g.LOAD:this.createNewFile(this._jerrySource.name,this._jerrySource.source,!0),this._surface.getPanelProperty("run.active")&&this._surface.updateRunPanel(this._surface.RUN_UPDATE_TYPE.ALL,this._debuggerObj,this._session);break;case g.RELOAD:this.resetFileContent(this._jerrySource.name,this._jerrySource.source)}}},{key:"reset",value:function(){f.default.clearElement(e("#backtrace-table-body")),this.unhighlightLine(),this._glyph.removeAll(),this._marker.remove(),this._lastBreakpoint=null,this._chartInfo=null,this._upload.list=this._upload.backupList,this._upload.allowed=!1,this._jerrySource.action=g.NOP,this._jerrySource.reset=!0,this.isFileInUploadList(0)&&this.removeFileFromUploadList(0)}},{key:"lastBreakpoint",get:function(){return this._lastBreakpoint},set:function(e){this._lastBreakpoint=e}},{key:"chartInfo",get:function(){return this._chartInfo},set:function(e){this._chartInfo=e}}]),t}();t.default=b}).call(t,n("c/5P"))},WhJR:function(e,t,n){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function s(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),r=function e(t,n,i,a){var s=Object.getOwnPropertyDescriptor(t,n);if(void 0===s){var o=Object.getPrototypeOf(t);null!==o&&e(o,n,i,a)}else if("value"in s&&s.writable)s.value=i;else{var r=s.set;void 0!==r&&r.call(a,i)}return i},l=n("Yuv6"),c=function(e){return e&&e.__esModule?e:{default:e}}(l),u=function(e){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;i(this,t);var o=a(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return r(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"_line",e,o),r(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"_func",s,o),r(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"_index",-1,o),o._sourceName=n,o}return s(t,e),o(t,[{key:"sourceName",get:function(){return this._sourceName},set:function(e){this._sourceName=e}}]),t}(c.default);t.default=u},Yuv6:function(e,t,n){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),s=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;i(this,e),this._line=t,this._offset=n,this._func=a,this._index=s}return a(e,[{key:"line",get:function(){return this._line},set:function(e){this._line=e}},{key:"offset",get:function(){return this._offset},set:function(e){this._offset=e}},{key:"func",get:function(){return this._func},set:function(e){this._func=e}},{key:"index",get:function(){return this._index},set:function(e){this.index=e}}]),e}();t.default=s},ZBmJ:function(e,t,n){"use strict";(function(e){function i(e){return e&&e.__esModule?e:{default:e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(){this._logger.info("Connection created."),this._debuggerObj.setEngineMode(d.ENGINE_MODE.RUN),this._surface.getPanelProperty("chart.active")&&this._surface.toggleButton(!0,"chart-record-button"),this._surface.getPanelProperty("run.active")&&this._surface.updateRunPanel(f.SURFACE_RUN_UPDATE_TYPE.ALL,this._debuggerObj,this._session),this._surface.getPanelProperty("watch.active")&&this._surface.updateWatchPanelButtons(this._debuggerObj),this._surface.disableActionButtons(!1),this._surface.toggleButton(!1,"connect-to-button")}function o(){this._socket&&(this._socket=null),this._logger.info("Connection closed."),this._debuggerObj.setEngineMode(d.ENGINE_MODE.DISCONNECTED),this._surface.getPanelProperty("chart.active")&&(this._chart.disableChartButtons(),this._chart.containsData()&&this._surface.toggleButton(!0,"chart-reset-button")),this._surface.getPanelProperty("watch.active")&&(this._surface.updateWatchPanelButtons(this._debuggerObj),this._session.neutralizeWatchExpressions()),this._settings.getValue("debugger.transpileToES5")&&!this._transpiler.isEmpty()&&this._transpiler.clearTranspiledSources(),this._session.isUploadStarted()&&this._session.setUploadStarted(!1),this._session.reset(),this._surface.reset(),this._surface.disableActionButtons(!0),this._surface.toggleButton(!0,"connect-to-button"),this._surface.continueStopButtonState(f.SURFACE_CSICON.CONTINUE),this._session.isContextReset()&&(this._session.setContextReset(!1),setTimeout(function(){e("#connect-to-button").trigger("click")},1e3))}function r(t){var n=new Uint8Array(t.data);if(n.byteLength<1&&this._socket.abortConnection("message too short."),0===this._debuggerObj.getCPointerSize())return n[0]===d.PROTOCOL.SERVER.JERRY_DEBUGGER_CONFIGURATION&&5===n.byteLength||this._socket.abortConnection("the first message must be configuration."),this._debuggerObj.setMaxMessageSize(n[1]),this._debuggerObj.setCPointerSize(n[2]),this._debuggerObj.setLittleEndian(0!=n[3]),this._debuggerObj.setProtocolVersion(n[4]),2!==this._debuggerObj.getCPointerSize()&&4!==this._debuggerObj.getCPointerSize()&&this._socket.abortConnection("compressed pointer must be 2 or 4 bytes long."),void(this._debuggerObj.getProtocolVersion()!==d.JERRY_DEBUGGER_VERSION&&this._socket.abortConnection("Incorrect debugger version from target."));if(this._parseObj)return this._parseObj.receive(n),void(this._parseObj.isAlive()||(this._parseObj=null));switch(n[0]){case d.PROTOCOL.SERVER.JERRY_DEBUGGER_PARSE_ERROR:case d.PROTOCOL.SERVER.JERRY_DEBUGGER_BYTE_CODE_CP:case d.PROTOCOL.SERVER.JERRY_DEBUGGER_PARSE_FUNCTION:case d.PROTOCOL.SERVER.JERRY_DEBUGGER_BREAKPOINT_LIST:case d.PROTOCOL.SERVER.JERRY_DEBUGGER_SOURCE_CODE:case d.PROTOCOL.SERVER.JERRY_DEBUGGER_SOURCE_CODE_END:case d.PROTOCOL.SERVER.JERRY_DEBUGGER_SOURCE_CODE_NAME:case d.PROTOCOL.SERVER.JERRY_DEBUGGER_SOURCE_CODE_NAME_END:case d.PROTOCOL.SERVER.JERRY_DEBUGGER_FUNCTION_NAME:case d.PROTOCOL.SERVER.JERRY_DEBUGGER_FUNCTION_NAME_END:return this._parseObj=new u.default(this._debuggerObj),this._parseObj.receive(n),void(this._parseObj.isAlive()||(this._parseObj=null));case d.PROTOCOL.SERVER.JERRY_DEBUGGER_WAITING_AFTER_PARSE:return void this._debuggerObj.encodeMessage("B",[d.PROTOCOL.CLIENT.JERRY_DEBUGGER_PARSER_RESUME]);case d.PROTOCOL.SERVER.JERRY_DEBUGGER_RELEASE_BYTE_CODE_CP:return void this._debuggerObj.releaseFunction(n);case d.PROTOCOL.SERVER.JERRY_DEBUGGER_MEMSTATS_RECEIVE:var i=this._debuggerObj.decodeMessage("IIIII",n,1);if(0!==i[0]){if(this._chart.isRecordStarted()&&(this._chart.startRecord(!1),this._chart.setChartActive(!0),this._surface.toggleButton(!1,"chart-reset-button"),this._surface.toggleButton(!0,"chart-stop-button"),this._surface.toggleButton(!1,"chart-record-button"),e("#chart-record-button").css("background-color","#16e016")),this._session.chartInfo&&this._chart.isChartActive()){var a=this._session.chartInfo.split(":")[1].split(" ")[0],s="ln: "+a;this._debuggerObj.getEngineMode()===d.ENGINE_MODE.BREAKPOINT&&(s="#"+a+": "+(new Date).toISOString().slice(14,21)),this._chart.addNewDataPoints(i,s)}}else this._logger.error("There are no memory statistics available. If you want to use the memory usage panel check the engine build command first.",!0);return;case d.PROTOCOL.SERVER.JERRY_DEBUGGER_BREAKPOINT_HIT:case d.PROTOCOL.SERVER.JERRY_DEBUGGER_EXCEPTION_HIT:this._debuggerObj.setEngineMode(d.ENGINE_MODE.BREAKPOINT);var o=this._debuggerObj.decodeMessage("CI",n,1),r=this._debuggerObj.getBreakpoint(o),l=r.breakpoint,c=l.func.sourceName,p=this._debuggerObj.getSources()[c],g="";this._debuggerObj.breakpoints.lastHit=l,l.offset.index>=0&&(g=" breakpoint:"+l.offset.index+" "),this._session.lastBreakpoint=l,this._surface.continueStopButtonState(f.SURFACE_CSICON.CONTINUE),this._surface.disableActionButtons(!1),""!==c?this._session.fileNameCheck(c,!0)?(this._session.setAutoSourceSync(!1),!this._settings.getValue("debugger.transpileToES5")&&this._transpiler.isEmpty()&&(this._session.fileContentCheck(c,p)||(this._session.setJerrySourceAction(_.SOURCE_SNYC_ACTION.RELOAD),this._logger.warning('The "'+c+'" source does not match with the source on the device!',!0),this._surface.toggleButton(!0,"jerry-sync-source-button")))):(this._session.storeJerrySource(c,p),this._session.setJerrySourceAction(_.SOURCE_SNYC_ACTION.LOAD),this._session.isAutoSourceSync()?(this._session.syncSourceFromJerry(),this._session.setAutoSourceSync(!1)):(this._logger.warning('The file "'+c+'" is missing.',!0),this._surface.toggleButton(!0,"jerry-sync-source-button"))):c=this._session.handleUnknownFile(Array.isArray(l.func.source)?l.func.source.join("\n"):l.func.source);var b=this._session.getFileIdByName(c);void 0!==b&&b!==this._session.getActiveID()&&this._session.switchFile(b);var y=l.line;if(this._settings.getValue("debugger.transpileToES5")&&!this._transpiler.isEmpty()&&(y=this._transpiler.getOriginalPositionFor(c.split("/").pop(),l.line,0).line-1),n[0]===d.PROTOCOL.SERVER.JERRY_DEBUGGER_EXCEPTION_HIT?(this._session.highlightLine(h.MARKER_TYPE.EXCEPTION,y),this._logger.error("Exception throw detected!"),this._exceptionData&&(this._logger.error("Exception hint: "+this._debuggerObj.cesu8ToString(this._exceptionData),!0),this._exceptionData=null)):void 0!==b&&b===this._session.getActiveID()&&(this._session.highlightLine(h.MARKER_TYPE.EXECUTE,y),this._session.markBreakpointLines(this._debuggerObj,this._settings,this._transpiler)),this._surface.getPanelProperty("backtrace.active")&&this._debuggerObj.getBacktrace(this._debuggerObj),this._surface.getPanelProperty("watch.active")&&this._session.updateWatchExpressions(this._debuggerObj),this._surface.getPanelProperty("chart.active")){for(var v in this._debuggerObj.breakpoints.activeBreakpoints)if(this._debuggerObj.breakpoints.activeBreakpoints[v].line===this._debuggerObj.breakpointToString(l).split(":")[1].split(" ")[0])return void this._surface.stopCommand();this._debuggerObj.encodeMessage("B",[d.PROTOCOL.CLIENT.JERRY_DEBUGGER_MEMSTATS]),this._session.chartInfo=this._debuggerObj.breakpointToString(l)}return void this._logger.info("Stopped "+(l.at?"at ":"around ")+g+this._debuggerObj.breakpointToString(l));case d.PROTOCOL.SERVER.JERRY_DEBUGGER_EXCEPTION_STR:case d.PROTOCOL.SERVER.JERRY_DEBUGGER_EXCEPTION_STR_END:return void(this._exceptionData=this._debuggerObj.concatUint8Arrays(this._exceptionData,n));case d.PROTOCOL.SERVER.JERRY_DEBUGGER_BACKTRACE:case d.PROTOCOL.SERVER.JERRY_DEBUGGER_BACKTRACE_END:m.default.clearElement(e("#backtrace-table-body"));for(var E=1;E<n.byteLength;E+=this._debuggerObj.getCPointerSize()+4){var k=this._debuggerObj.decodeMessage("CI",n,E);this._surface.updateBacktracePanel(this._debuggerObj.getBacktraceFrame(),this._debuggerObj.getBreakpoint(k).breakpoint,this._settings,this._transpiler),this._debuggerObj.setBacktraceFrame(this._debuggerObj.getBacktraceFrame()+1)}return void(n[0]===d.PROTOCOL.SERVER.JERRY_DEBUGGER_BACKTRACE_END&&this._debuggerObj.setBacktraceFrame(0));case d.PROTOCOL.SERVER.JERRY_DEBUGGER_EVAL_RESULT:case d.PROTOCOL.SERVER.JERRY_DEBUGGER_EVAL_RESULT_END:this._evalResult=this._debuggerObj.concatUint8Arrays(this._evalResult,n);var R=this._evalResult[this._evalResult.length-1];if(this._evalResult=this._evalResult.slice(0,-1),R===d.PROTOCOL.SERVER.JERRY_DEBUGGER_EVAL_OK)return this._surface.getPanelProperty("watch.active")&&this._session.isWatchInProgress()?(this._session.stopWatchProgress(),this._session.addWatchExpressionValue(this._debuggerObj,this._session.getWatchCurrentExpr(),this._debuggerObj.cesu8ToString(this._evalResult))):this._logger.info(this._debuggerObj.cesu8ToString(this._evalResult)),void(this._evalResult=null);if(R===d.PROTOCOL.SERVER.JERRY_DEBUGGER_EVAL_ERROR)return this._surface.getPanelProperty("watch.active")&&this._session.isWatchInProgress()?(this._session.stopWatchProgress(),this._session.addWatchExpressionValue(this._debuggerObj,this._session.getWatchCurrentExpr(),"")):this._logger.info("Uncaught exception: "+this._debuggerObj.cesu8ToString(this._evalResult)),void(this._evalResult=null);return;case d.PROTOCOL.SERVER.JERRY_DEBUGGER_OUTPUT_RESULT:case d.PROTOCOL.SERVER.JERRY_DEBUGGER_OUTPUT_RESULT_END:if(this._outputResult=this._debuggerObj.concatUint8Arrays(this._outputResult,n),n[0]===d.PROTOCOL.SERVER.JERRY_DEBUGGER_OUTPUT_RESULT_END){var T=this._outputResult[this._outputResult.length-1];switch(this._outputResult=this._outputResult.slice(0,-1),T){case d.PROTOCOL.SERVER.JERRY_DEBUGGER_OUTPUT_OK:this._output.info(this._debuggerObj.cesu8ToString(this._outputResult));break;case d.PROTOCOL.SERVER.JERRY_DEBUGGER_OUTPUT_DEBUG:this._output.debug(this._debuggerObj.cesu8ToString(this._outputResult));break;case d.PROTOCOL.SERVER.JERRY_DEBUGGER_OUTPUT_WARNING:this._output.warning(this._debuggerObj.cesu8ToString(this._outputResult));break;case d.PROTOCOL.SERVER.JERRY_DEBUGGER_OUTPUT_ERROR:this._output.error(this._debuggerObj.cesu8ToString(this._outputResult));break;case d.PROTOCOL.SERVER.JERRY_DEBUGGER_OUTPUT_TRACE:this._output.info("TRACE: "+this._debuggerObj.cesu8ToString(this._outputResult))}this._outputResult=null}return;case d.PROTOCOL.SERVER.JERRY_DEBUGGER_WAIT_FOR_SOURCE:return this._debuggerObj.setEngineMode(d.ENGINE_MODE.CLIENT_SOURCE),this._surface.disableActionButtons(!0),this._session.allowUploadAndRun(!0),this._surface.getPanelProperty("run.active")&&this._surface.updateRunPanel(f.SURFACE_RUN_UPDATE_TYPE.BUTTON,this._debuggerObj,this._session),void this._debuggerObj.sendClientSource();default:return void this._socket.abortConnection("unexpected message.")}}Object.defineProperty(t,"__esModule",{value:!0});var l=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),c=n("tsLY"),u=i(c),d=n("LEPx"),h=n("4vYf"),f=n("2QIY"),p=n("zb0f"),g=i(p),b=n("lOm7"),m=i(b),_=n("Lo4h"),y=n("bqMR"),v=i(y),E=function(){function t(n,i,l,c,u,d){a(this,t),this._debuggerObj=n,this._surface=l,this._session=c,this._settings=u,this._chart=d,this._transpiler=new g.default,this._output=new v.default(e("#output-panel")),this._logger=new v.default(e("#console-panel")),this._parseObj=null,this._exceptionData=null,this._evalResult=null,this._outputResult=null,this._socket=new WebSocket("ws://"+i+"/jerry-debugger"),this._socket.binaryType="arraybuffer",this._socket.abortConnection=this.abort,this._socket.onopen=s.bind(this),this._socket.onmessage=r.bind(this),this._socket.onclose=this._socket.onerror=o.bind(this),this._logger.info("ws://"+i+"/jerry-debugger")}return l(t,[{key:"close",value:function(){this._socket.close(),this._socket=null,this._parseObj=null}},{key:"abort",value:function(e){throw m.default.assert(this._socket),this.close(),this._logger.error("Connection aborted: "+e,!0),new Error(e)}},{key:"send",value:function(e){this._socket.send(e),e[0]!==d.PROTOCOL.CLIENT.JERRY_DEBUGGER_CONTINUE&&e[0]!==d.PROTOCOL.CLIENT.JERRY_DEBUGGER_STEP&&e[0]!==d.PROTOCOL.CLIENT.JERRY_DEBUGGER_NEXT||this._debuggerObj.setEngineMode(d.ENGINE_MODE.RUN)}}]),t}();t.default=E}).call(t,n("c/5P"))},ZKbB:function(e,t){e.exports={adc:[{label:"read",kind:2,detail:"adc.read(callback)",documentation:"* `callback` {Function}\n  * `err`: {Error|null}\n\nReads the analog value from the pin asynchronously.\n\n`callback` will be called having read the analog value.\n",insertText:"read"},{label:"readSync",kind:2,detail:"adc.readSync()",documentation:"* Returns: `{int}` Analog value.\n\nReads the analog value from the pin synchronously.\n",insertText:"readSync"},{label:"close",kind:2,detail:"adc.close([callback])",documentation:"* `callback` {Function}\n  * `err`: {Error|null}\n\nCloses ADC pin asynchronously. This function must be called after the work of ADC finished.\n\n`callback` will be called after ADC device is released.\n",insertText:"close"},{label:"closeSync",kind:2,detail:"adc.closeSync()",documentation:"\nCloses ADC pin synchronously. This function must be called after the work of ADC finished.\n",insertText:"closeSync"}],assert:[{label:"assert",kind:2,detail:"assert(value[, message])",documentation:"* `value` {any} Value to test.\n* `message` {any} Message displayed in the thrown error.\n\nChecks if the `value` is truthy. If it is not, throws an AssertionError, with the given optional `message`.\n",insertText:"assert"},{label:"doesNotThrow",kind:2,detail:"doesNotThrow(block[, message])",documentation:"* `block` {Function}\n* `message` {any} Message to be displayed.\n\nTests if the given `block` does not throw any exception. Otherwise throws an\nexception with the given optional `message`.\n",insertText:"doesNotThrow"},{label:"equal",kind:2,detail:"equal(actual, expected[, message])",documentation:"* `actual` {any} The actual value.\n* `expected` {any} The expected value.\n* `message` {any} Message to be displayed.\n\nTests if `actual == expected` is evaluated to `true`. Otherwise throws an\nexception with the given optional `message`.\n",insertText:"equal"},{label:"fail",kind:2,detail:"fail(actual, expected, message, operator)",documentation:"* `actual` {any} The actual value.\n* `expected` {any} The expected value.\n* `message` {any} Message to be displayed.\n* `operator` {string} The operator.\n\nThrows an `AssertionError` exception with the given `message`.\n",insertText:"fail"},{label:"notEqual",kind:2,detail:"notEqual(actual, expected[, message])",documentation:"* `actual` {any} The actual value.\n* `expected` {any} The expected value.\n* `message` {any} Message to be displayed.\n\nTests if `actual != expected` is evaluated to `true`. Otherwise throws an\nexception with the given optional `message`.\n",insertText:"notEqual"},{label:"notStrictEqual",kind:2,detail:"notStrictEqual(actual, expected[, message])",documentation:"* `actual` {any} The actual value.\n* `expected` {any} The expected value.\n* `message` {any} Message to be displayed.\n\nTests if `actual !== expected` is evaluated to `true`. Otherwise throws an exception\nwith the given optional `message`.\n",insertText:"notStrictEqual"},{label:"strictEqual",kind:2,detail:"strictEqual(actual, expected[, message])",documentation:"* `actual` {any} The actual value.\n* `expected` {any} The expected value.\n* `message` {any} Message to be displayed.\n\nTests if `actual === expected` is evaluated to `true`. Otherwise throws an exception\nwith the given optional `message`.\n",insertText:"strictEqual"},{label:"throws",kind:2,detail:"throws(block[, expected, message])",documentation:"* `block` {Function} The function that throws an error.\n* `expected` {Function} The expected error type.\n* `message` {any} Message to be displayed.\n\nTests if the given `block` throws an `expected` error. Otherwise throws an exception\nwith the given optional `message`.\n",insertText:"throws"}],ble:[{label:"startAdvertising",kind:2,detail:"ble.startAdvertising(name, serviceUuids[, callback])",documentation:"* `name` {string} Maximum 26 bytes.\n* `serviceUuids` {Array[String]}\n  * 1 128-bit service UUID\n  * 1 128-bit service UUID + 2 16-bit service UUIDs\n  * 7 16-bit service UUID\n* `callback` {Function} Error handler.\n  * `error` {Error}\n\nStarts advertising.\n\n`ble.state` must be in poweredOn state before advertising is started.\n`ble.on('stateChange', callback(state));` can be used to register for state change events.\n",insertText:"startAdvertising"},{label:"stopAdvertising",kind:2,detail:"ble.stopAdvertising(callback)",documentation:"* `callback` {Function} Error handler.\n  * `error` {Error}\n\nStops advertising.\n\n",insertText:"stopAdvertising"},{label:"setServices",kind:2,detail:"ble.setServices(services[, callback])",documentation:"* `services` {Array[PrimaryService]}\n* `callback` {Function} Error handler.\n  * `error` {Error}\n\nSets the primary services available on the peripheral.\n\n\n## Class: Descriptor\n\nDescriptors are defined attributes that describe a characteristic value.\n",insertText:"setServices"}],buffer:[{label:"byteLength",kind:2,detail:"Buffer.byteLength(str, encoding)",documentation:"\n* `str` {string} Source string.\n* `encoding` {string} String encoding.\n* Returns: {integer} Byte length of source string.\n\nReturns the byte length of a buffer representing the value\nof the string argument encoded with encoding. The effect is\nthe same as:\n\n```js\nreturn new Buffer(str, encoding).length;\n```\n",insertText:"byteLength"},{label:"concat",kind:2,detail:"Buffer.concat(list)",documentation:"* `list` {Array} An array of `Buffer` objects.\n* Returns: {Buffer} Concatenated buffer.\n\nReturns the concatenation of the `Buffer` objects\nprovided in the `list` array.\n",insertText:"concat"},{label:"isBuffer",kind:2,detail:"Buffer.isBuffer(obj)",documentation:"* `obj` {Object}\n* Returns: {boolean}\n\nReturns `true` if `obj` is an instance of `Buffer`. Returns\n`false` otherwise.\n",insertText:"isBuffer"},{label:"compare",kind:2,detail:"buf.compare(otherBuffer)",documentation:"* `otherBuffer` {Buffer} The right-hand side of the comparison.\n* Returns: {integer}\n\nThis function performs a lexicographic comparison between\ntwo buffers.\n\nIt returns with `0` if the two buffers are the same. Otherwise\nit returns with `-1` if the first different byte is lower for\n`buf`, and `1` if the byte is higher. If the length of the two\nbuffers are different, the comparison is performed until the\nlower length is reached. If all bytes are the same the function\nreturns with `-1` if `buf.length` is less than `otherBuffer.length`\nand `1` otherwise.\n",insertText:"compare"},{label:"copy",kind:2,detail:"buf.copy(targetBuffer[, targetStart[, sourceStart[, sourceEnd]]])",documentation:"* `targetBuffer` {Buffer} The buffer to be modified.\n* `targetStart` {Integer} **Default:** `0`\n* `sourceStart` {integer} **Default:** `0`\n* `sourceEnd` {integer} **Default:** `buf.length`\n* Returns: {integer} The number of bytes copied.\n\nCopy a sequence of bytes from `buf` buffer to `targetBuffer` buffer.\nThe source byte range is specified by `sourceStart` and `sourceEnd`\nand the destination byte offset is specified by `targetStart`. Only\nthe `targetBuffer` is modified.\n",insertText:"copy"},{label:"equals",kind:2,detail:"buf.equals(otherBuffer)",documentation:"* `otherBuffer` {Buffer} The right-hand side of the comparison.\n* Returns: {boolean}\n\nReturns `true` if `this` and `otherBuffer` have exactly the\nsame bytes. Returns `false` otherwise. The effect is the same as:\n\n```js\nreturn buf.compare(otherBuffer) == 0;\n```\n",insertText:"equals"},{label:"fill",kind:2,detail:"buf.fill(value)",documentation:"* `value` {integer} All bytes are set to this value.\n* Returns: {Buffer} The original buffer.\n\nSet all bytes of the buffer to value. The value is converted to\ninteger first and its modulo 256 remainder is used for updating\nthe buffer. Returns with `buf`.\n",insertText:"fill"},{label:"slice",kind:2,detail:"buf.slice([start[, end]])",documentation:"* `start` {integer} **Default:** `0`\n* `end` {integer} **Default:** `buf.length`\n* Returns: {Buffer} A newly created buffer.\n\nThis function returns with a newly created buffer which\ncontains the bytes of the `buf` buffer between `start`\nand `end`.\n",insertText:"slice"},{label:"toString",kind:2,detail:"buf.toString([start[, end]])",documentation:"* `start` {integer} **Default:** `0`\n* `end` {integer} **Default:** `buffer.length`\n* Returns: {string}\n\nReturns a string created from the bytes stored in the buffer.\nBy passing `start` and `end` the conversion can be limited\nto a subset of the `buf` buffer. If a single `hex` string is\npassed to the function, the whole buffer is converted to\nhexadecimal data.\n",insertText:"toString"},{label:"write",kind:2,detail:"buf.write(string[, offset[, length]])",documentation:"* `string` {string} Data to be written into buffer.\n* `offset` {integer} Start position of writing. **Default:** `0`\n* `length` {integer} How many bytes to write. **Default:** `buffer.length - offset`.\n* Returns: {integer} Total number of bytes written.\n\nWrites `string` into the `buf` buffer. The start position of the\nwriting can be specified by `offset` and the maximum number of\nupdated bytes can be limited by `length`. Returns total number\nof bytes written to the buffer.\n",insertText:"write"},{label:"writeUInt8",kind:2,detail:"buf.writeUInt8(value, offset[, noAssert])",documentation:"* `value` {integer} Number to be written into the buffer.\n* `offset` {integer} Start position of the writing.\n* `noAssert` {boolean} Skip argument validation. **Default:** `false`\n* Returns: {number} Offset plus the number of bytes written.\n\nWrites `value` into the buffer starting from `offset` position.\nThe `value` must be a valid 8-bit unsigned integer.\n\nIf `noAssert` is set and the value is outside of the expected range\nor the offset is higher than the size of the buffer the operation\nis undefined.\n",insertText:"writeUInt8"},{label:"writeUInt16LE",kind:2,detail:"buf.writeUInt16LE(value, offset[, noAssert])",documentation:"* `value` {integer} Number to be written into the buffer.\n* `offset` {integer} Start position of the writing.\n* `noAssert` {boolean} Skip argument validation. **Default:** `false`\n* Returns: {integer} Offset plus the number of bytes written.\n\nWrites `value` into the buffer starting from `offset` position\nwith little endian format. The `value` must be a valid 16-bit\nunsigned integer.\n\nIf `noAssert` is set and the value is outside of the expected range\nor the offset is higher than the size of the buffer the operation\nis undefined.\n",insertText:"writeUInt16LE"},{label:"writeUInt32LE",kind:2,detail:"buf.writeUInt32LE(value, offset[, noAssert])",documentation:"* `value` {integer} Number to be written into the buffer.\n* `offset` {integer} Start position of the writing.\n* `noAssert` {boolean} Skip argument validation. **Default:** `false`\n* Returns: {integer} Offset plus the number of bytes written.\n\nWrites `value` into the buffer starting from `offset` position\nwith little endian format. The `value` must be a valid 32-bit\nunsigned integer.\n\nIf `noAssert` is set and the value is outside of the expected range\nor the offset is higher than the size of the buffer the operation\nis undefined.\n",insertText:"writeUInt32LE"},{label:"readInt8",kind:2,detail:"buf.readInt8(offset[, noAssert])",documentation:"* `offset` {number} Start position of buffer for reading.\n* `noAssert` {boolean} Skip offset validation. **Default:** `false`\n* Returns: {number}\n\nReads a signed 8-bit integer from `buf` buffer starting from\n`offset` position.\n\nIf `noAssert` is set and the offset is higher than the size of\nthe buffer the result is undefined.\n",insertText:"readInt8"},{label:"readUInt8",kind:2,detail:"buf.readUInt8(offset[, noAssert])",documentation:"* `offset` {integer} Start position of the reading.\n* `noAssert` {boolean} Skip argument validation. **Default:** `false`\n* Returns: {number}\n\nReads an unsigned 8-bit integer from `buf` buffer starting from\n`offset` position.\n\nIf `noAssert` is set and the offset is higher than the size of\nthe buffer the result is undefined.\n",insertText:"readUInt8"},{label:"readUInt16LE",kind:2,detail:"buf.readUInt16LE(offset[, noAssert])",documentation:"* `offset` {number} Start position of buffer for reading.\n* `noAssert` {boolean} Skip offset validation. **Default:** `false`\n* Returns: {number}\n\nReads an unsigned 16-bit integer from `buf` buffer starting from\n`offset` position with little endian format.\n\nIf `noAssert` is set and the offset is higher than the size of\nthe buffer the result is undefined.\n",insertText:"readUInt16LE"}],dgram:[{label:"createSocket",kind:2,detail:"dgram.createSocket(options[, callback])",documentation:"* `options` {Object}\n  * `type` {string}\n  * `reuseAddr` {boolean}\n* `callback` {Function} (optional)\n\nCreates a new `dgram.Socket` object. The type of the connection\nis specified by `options.type`. Currently only `udp4` is supported.\n\nIf `reuseAddr` is true the `socket.bind()` call reuses the address\neven if this address has been bound by another process.\n\nThe optional 'callback' function is attached to the\n[`'message'`](#event-message) event.\n",insertText:"createSocket"},{label:"createSocket",kind:2,detail:"dgram.createSocket(type[, callback])",documentation:"* `type` {string}\n* `callback` {Function} (optional)\n\nCreates a new `dgram.Socket` object. The type of the connection\nis specified by the `type` argument. Currently only `udp4` is\nsupported.\n\nThe optional 'callback' function is attached to the\n[`'message'`](#event-message) event.\n",insertText:"createSocket"},{label:"addMembership",kind:2,detail:"socket.addMembership(multicastAddress[, multicastInterface])",documentation:"* `multicastAddress` {string}\n* `multicastInterface` {string}\n\nJoins the multicast group specified by `multicastAddress` and\n`multicastInterface`. If `multicastInterface` is undefined the\noperating system will choose one add interface and will add\nmembership to it. To add membership to every available interface,\ncall addMembership multiple times, once per interface.\n\n",insertText:"addMembership"},{label:"address",kind:2,detail:"socket.address()",documentation:"* Returns: {Object}\n\nReturns an object with the properties `address`, `port` and `family`.\n",insertText:"address"},{label:"bind",kind:2,detail:"socket.bind([port][, address][, bindListener])",documentation:"* `port` {number}\n* `address` {string} **Default:** `0.0.0.0`\n* `bindListener` {Function}\n\nAssign the `port` and `address` to an UDP socket. If `port` is\nnot specified the operating system selects a random unused\nport.\n\nThe optional 'bindListener' function is attached to the\n[`'listening'`](#event-listening) event.\n",insertText:"bind"},{label:"bind",kind:2,detail:"socket.bind(options[, bindListener])",documentation:"* `options` {Object}\n  * `port` {number}\n  * `address` {string} **Default:** `0.0.0.0`\n* `bindListener` {Function}\n\nAssign `options.port` and `options.address` to an UDP socket.\nIf `options.port` is not specified the operating system selects\na random unused port.\n\nThe optional 'bindListener' function is attached to the\n[`'listening'`](#event-listening) event.\n",insertText:"bind"},{label:"close",kind:2,detail:"socket.close([closeListener])",documentation:"* `closeListener` {Function}\n\nClose the underlying socket and stop listening for data on it.\n\nThe optional 'closeListener' function is attached to the\n[`'close'`](#event-close) event.\n",insertText:"close"},{label:"dropMembership",kind:2,detail:"socket.dropMembership(multicastAddress[, multicastInterface])",documentation:"* `multicastAddress` {string}\n* `multicastInterface` {string}\n\nLeaves for socket the given multicast group with given `multicastAddress` and `multicastInterface`.\n",insertText:"dropMembership"},{label:"setBroadcast",kind:2,detail:"socket.setBroadcast(flag)",documentation:"* `flag` {boolean}\n\nSets or clears the `SO_BROADCAST` socket option. When `flag` is\ntrue UDP packets may be sent to a local interface's broadcast\naddress.\n",insertText:"setBroadcast"},{label:"send",kind:2,detail:"socket.send(msg, [offset, length,] port [, address] [, sendListener])",documentation:'* `msg` {Buffer|string|array}\n* `offset` {integer} Only valid if `msg` is Buffer.\n* `length` {integer} Only valid if `msg` is Buffer.\n* `port` {integer}\n* `address` {string} **Default:** `127.0.0.1` or `::1`\n* `sendListener` {Function}\n  * `Error` {Object|null}\n    * `code` {string} Currently it is always `"error"`.\n    * `errno` {string} Same as `code`.\n    * `syscall` {integer}\n    * `address` {string}\n    * `port` {integer}\n  * `length` {integer} Length of data.\n\nTransmits a message to the destination socket specified by\n`address` and `port` arguments. The `msg` argument contains\nthe data to be sent. It can be a {Buffer}, a {string} converted\nto UTF-8 bytes, or an array of {Buffer} and {string} values.\nIn the latter case the items of the array are concatenated\ninto a single {Buffer} before sending.\n\nIf send operation is successfully completed, `sendListener` will\nbe called with `null` and the length of data. Otherwise an\nError {Object} is passed along with the length of data.\n',insertText:"send"},{label:"sendto",kind:2,detail:"socket.sendto(msg, offset, length, port [, address] [, sendListener])",documentation:"* `msg` {Buffer|string|array}\n* `offset` {integer}\n* `length` {integer}\n* `port` {integer}\n* `address` {string} **Default:** `127.0.0.1` or `::1`\n* `sendListener` {Function}\n\nLegacy function. It is the same as\n[`socket.send`](#socket-send-msg-offset-length-port-address-sendListener)\nexcept `offset` and `length` arguments are mandatory.\n",insertText:"sendto"},{label:"setMulticastLoopback",kind:2,detail:"socket.setMulticastLoopback(flag)",documentation:"* `flag` {boolean}\n\nSets or clears the `IP_MULTICAST_LOOP` socket option. When `flag` is\n`true` multicast packets will also be received on the local interface.\n",insertText:"setMulticastLoopback"},{label:"setMulticastTTL",kind:2,detail:"socket.setMulticastTTL(ttl)",documentation:"* `ttl` {integer} This value must be between 0 and 255.\n\nSets the `IP_MULTICAST_TTL` socket option which pecifies the\nnumber of IP hops that a packet is allowed to travel through,\nspecifically for multicast traffic. Each router or gateway\nthat forwards a packet decrements its TTL. When TTL reaches\nzero the packet is not forwarded anymore.\n\nThe default on most systems is 1 but can vary.\n\n",insertText:"setMulticastTTL"},{label:"setTTL",kind:2,detail:"socket.setTTL(ttl)",documentation:"* `ttl` {integer} This value must be between 1 and 255.\n\nSets the `IP_TTL` socket option which specifies the number of IP\nhops that a packet is allowed to travel through. Each router or\ngateway that forwards a packet decrements its TTL. When TTL reaches\nzero the packet is not forwarded anymore.\n\nThe default on most systems is 64 but can vary.\n",insertText:"setTTL"}],dns:[{label:"lookup",kind:2,detail:"dns.lookup(hostname[, options], callback)",documentation:"* `hostname` {string} Hostname to be resolved.\n* `options` {Object|number}\n  * `family` {number} The record family. If specified must be 4. Specifies that IPv4 addresses should be returned.\n  * `hints` {number} One or more supported getaddrinfo flags. Multiple flags may be passed by bitwise `OR`ing their values.\n* `callback` {Function}\n  * `err` {Error|null} If there is no error the value is `null`.\n  * `address` {string} A string representation of an IPv4 address.\n  * `family` {number} 4, denoting the family of `address`.\n\nResolves a hostname (e.g. `iotjs.net`) into the first found A (IPv4) or AAAA (IPv6) record. All `option` properties\nare option. If `option` is a number, then it must be `4`. If `options` is not provided, then IPv4 addresses are\nreturned if found.\n\nOn error, `err` is an `Error` object where `err.code` is the error code returned by the underlying system call.\n\nThe `dns.lookup()` does not necessarily do DNS requests to resolve a hostname. The implementation uses an\noperating system facility to associate names with addresses. Please read the\n[Implementation considerations section](#implementation-considerations) for more system dependent information.\n",insertText:"lookup"}],events:[{label:"addListener",kind:2,detail:"emitter.addListener(event, listener)",documentation:"* `event` {string} The name of the event.\n* `listener` {Function} The callback function.\n  * `args` {any}.\n* Returns `emitter` {events.EventEmitter}.\n\nIt is an alias for `emitter.on(eventName, listener)`.\n\nAdds the `listener` callback function to the end of the listener's list for the given `event`. No checks are made to see if the `listener` has already been added.\nIn case of multiple calls the `listener` will be added and called multiple times.\n",insertText:"addListener"},{label:"on",kind:2,detail:"emitter.on(event, listener)",documentation:"* `event` {string} The name of the event.\n* `listener` {Function} The callback function.\n  * `args` {any}.\n* Returns `emitter` {events.EventEmitter}.\n\nAdds the `listener` callback function to the end of the listener's list for the given `event`. No checks are made to see if the `listener` has already been added.\nIn case of multiple calls the `listener` will be added and called multiple times.\n",insertText:"on"},{label:"emit",kind:2,detail:"emitter.emit(event[, args..])",documentation:"* `event` {string} The name of the event.\n  * `args` {any}.\n* Returns {boolean}.\n\nSynchronously calls each of the listeners registered for the `event`, in the order they were registered, passing the supplied arguments to each.\n\nReturns true if the event had listeners, false otherwise.\n",insertText:"emit"},{label:"once",kind:2,detail:"emitter.once(event, listener)",documentation:"* `event` {string} The name of the event.\n* `listener` {Function} The callback function.\n  * `args` {any}.\n* Returns `emitter` {events.EventEmitter}.\n\nAdds the `listener` as a one time listener for the `event`.\n\nUsing this method, it is possible to register a listener that is called at most once for a particular `event`.\nThe listener will be invoked only once, when the first `event` is emitted.\n",insertText:"once"},{label:"removeListener",kind:2,detail:"emitter.removeListener(event, listener)",documentation:"* `event` {string} The name of the event.\n* `listener` {Function} The callback function.\n  * `args` {any}.\n* Returns `emitter` {events.EventEmitter}.\n\nRemoves `listener` from the list of event listeners.\n\nIf you add the same `listener` multiple times, this removes only one instance of them.\n",insertText:"removeListener"},{label:"removeAllListeners",kind:2,detail:"emitter.removeAllListeners([event])",documentation:"* `event` {string} The name of the event.\n* Returns `emitter` {events.EventEmitter}.\n\nRemoves all listeners.\n\nIf `event` was specified, it only removes the listeners for that event.\n",insertText:"removeAllListeners"}],fs:[{label:"isDirectory",kind:2,detail:"stats.isDirectory()",documentation:"* Returns: {boolean}\n\nReturns true if stated file is a directory.\n\n",insertText:"isDirectory"},{label:"isFile",kind:2,detail:"stats.isFile()",documentation:"* Returns: {boolean}\n\nReturns true if stated file is a file.\n",insertText:"isFile"},{label:"close",kind:2,detail:"fs.close(fd, callback)",documentation:"* `fd` {integer} File descriptor.\n* `callback` {Function}\n  * `err` {Error|null}\n\nCloses the file of `fd` asynchronously.\n",insertText:"close"},{label:"closeSync",kind:2,detail:"fs.closeSync(fd)",documentation:"* `fd` {integer} File descriptor.\n\nCloses the file of `fd` synchronously.\n",insertText:"closeSync"},{label:"exists",kind:2,detail:"fs.exists(path, callback)",documentation:"* `path` {string} File path to be checked.\n* `callback` {Function}\n  * `exists` {boolean}\n\nChecks the file specified by `path` exists asynchronously.\n",insertText:"exists"},{label:"existsSync",kind:2,detail:"fs.existsSync(path)",documentation:"* `path` {string} File path to be checked.\n* Returns: {boolean} True if the file exists, otherwise false.\n\nChecks the file specified by `path` exists synchronously.\n\n```js\nvar assert = require('assert');\nvar fs = require('fs');\n\nvar result = fs.existsSync('test.txt');\nassert.equal(result, true);\n```\n",insertText:"existsSync"},{label:"fstat",kind:2,detail:"fs.fstat(fd, callback)",documentation:"* `fd` {integer} File descriptor to be stated.\n* `callback` {Function}\n  * `err` {Error|null}\n  * `stat` {Object} An instance of `fs.Stats`.\n\nGet information about a file what specified by `fd` into `stat` asynchronously.\n",insertText:"fstat"},{label:"fstatSync",kind:2,detail:"fs.fstatSync(fd)",documentation:"* `fd` {integer} - File descriptor to be stated.\n* Returns: {Object} An instance of `fs.Stats`.\n\nGet information about a file what specified by `fd` synchronously.\n",insertText:"fstatSync"},{label:"mkdir",kind:2,detail:"fs.mkdir(path[, mode], callback)",documentation:"* `path` {string} Path of the directory to be created.\n* `mode` {string|number} Permission mode. **Default:** `0777`\n* `callback` {Function}\n  * `err` {Error|null}\n\nCreates the directory specified by `path` asynchronously.\n",insertText:"mkdir"},{label:"mkdirSync",kind:2,detail:"fs.mkdirSync(path[, mode])",documentation:"* `path` {string} Path of the directory to be created.\n* `mode` {string|number} Permission mode. **Default:** `0777`\n\nCreates the directory specified by `path` synchronously.\n",insertText:"mkdirSync"},{label:"open",kind:2,detail:"fs.open(path, flags[, mode], callback)",documentation:"* `path` {string} File path to be opened.\n* `flags` {string} Open flags.\n* `mode` {string|number} Permission mode. **Default:** `0666`\n* `callback` {Function}\n  * `err` {Error|null}\n  * `fd` {number}\n\nOpens file asynchronously.\n\n`flags` can be:\n  * `r` Opens file for reading. Throws an exception if the file does not exist.\n  * `rs` or `sr` Opens file for reading in synchronous mode. Throws an exception if the file does not exist.\n  * `r+` Opens file for reading and writing. Throws an exception if the file does not exist.\n  * `rs+` or `sr+` Opens file for reading and writing in synchronous mode. Throws an exception if the file does not exist.\n  * `w` Opens file for writing. The file is overwritten if it exists.\n  * `wx` or `xw` Opens file for writing. Throws an exception if it exists.\n  * `w+` Opens file for reading and writing. The file is overwritten if it exists.\n  * `wx+` or `xw+` Opens file for reading and writing. Throws an exception if it exists.\n  * `a` Opens file for appending. The file is created if it does not exist.\n  * `ax` or `xa` Opens file for appending. Throws an exception if it exists.\n  * `a+` Opens file for reading and appending. The file is created if it does not exist.\n  * `ax+` or `xa+` Opens file for reading and appending. Throws an exception if it exists.\n",insertText:"open"},{label:"openSync",kind:2,detail:"fs.openSync(path, flags[, mode])",documentation:"* `path` {string} File path to be opened.\n* `flags` {string} Open flags.\n* `mode` {string|number} Permission mode. **Default:** `0666`\n* Returns: {number} File descriptor.\n\nOpens file synchronously.\n\nFor available options of the `flags` see [fs.open()](#class-method-fsopenpath-flags-mode-callback).\n",insertText:"openSync"},{label:"read",kind:2,detail:"fs.read(fd, buffer, offset, length, position, callback)",documentation:"* `fd` {integer} File descriptor.\n* `buffer` {Buffer} Buffer that the data will be written to.\n* `offset` {number} Offset of the buffer where to start writing.\n* `length` {number} Number of bytes to read.\n* `position` {number} Specifying where to start read data from the file, if `null` or `undefined`, read from current position.\n* `callback` {Function}\n  * `err` {Error|null}\n  * `bytesRead` {number}\n  * `buffer` {Buffer}\n\nReads data from the file specified by `fd` asynchronously.\n",insertText:"read"},{label:"readSync",kind:2,detail:"fs.readSync(fd, buffer, offset, length, position)",documentation:"* `fd` {integer} File descriptor.\n* `buffer` {Buffer} Buffer that the data will be written to.\n* `offset` {number} Offset of the buffer where to start writing.\n* `length` {number} Number of bytes to read.\n* `position` {number} Specifying where to start read data from the file, if `null` or `undefined`, read from current position.\n* Returns: {number} Number of read bytes.\n\nReads data from the file specified by `fd` synchronously.\n",insertText:"readSync"},{label:"readdir",kind:2,detail:"fs.readdir(path, callback)",documentation:"* `path` {string} Directory path to be checked.\n* `callback` {Function}\n  * `err` {Error|null}\n  * `files` {Object}\n\nReads the contents of the directory specified by `path` asynchronously, `.` and `..` are excluded from `files`.\n",insertText:"readdir"},{label:"readdirSync",kind:2,detail:"fs.readdirSync(path)",documentation:"* `path` {string} Directory path to be checked.\n* Returns: {Object} Array of filenames.\n\nReads the contents of the directory specified by `path` synchronously, `.` and `..` are excluded from filenames.\n",insertText:"readdirSync"},{label:"readFile",kind:2,detail:"fs.readFile(path, callback)",documentation:"* `path` {string} File path to be opened.\n* `callback` {Function}\n  * `err` {Error|null}\n  * `data` {Buffer}\n\nReads entire file asynchronously into `data`.\n",insertText:"readFile"},{label:"readFileSync",kind:2,detail:"fs.readFileSync(path)",documentation:"* `path` {string} File path to be opened.\n* Returns: {Object} Contents of the file.\n\nReads entire file synchronously.\n",insertText:"readFileSync"},{label:"rename",kind:2,detail:"fs.rename(oldPath, newPath, callback)",documentation:"* `oldPath` {string} Old file path.\n* `newPath` {string} New file path.\n* `callback` {Function}\n  * `err` {Error|null}\n\nRenames `oldPath` to `newPath` asynchronously.\n",insertText:"rename"},{label:"renameSync",kind:2,detail:"fs.renameSync(oldPath, newPath)",documentation:"* `oldPath` {string} Old file path.\n* `newPath` {string} New file path.\n\nRenames `oldPath` to `newPath` synchronously.\n",insertText:"renameSync"},{label:"rmdir",kind:2,detail:"fs.rmdir(path, callback)",documentation:"* `path` {string} Directory path to be removed.\n* `callback` {Function}\n  * `err` {Error|null}\n\nRemoves the directory specified by `path` asynchronously.\n",insertText:"rmdir"},{label:"rmdirSync",kind:2,detail:"fs.rmdirSync(path)",documentation:"* `path` {string} Directory path to be removed.\n\nRemoves the directory specified by `path` synchronously.\n\n```js\nvar fs = require('fs');\n\nfs.rmdirSync('testdir');\n```\n\n",insertText:"rmdirSync"},{label:"stat",kind:2,detail:"fs.stat(path, callback)",documentation:"* `path` {string} File path to be stated.\n* `callback` {Function}\n  * `err` {Error|null}\n  * `stat` {Object}\n\nGet information about a file into `stat` asynchronously.\n",insertText:"stat"},{label:"statSync",kind:2,detail:"fs.statSync(path)",documentation:"* `path` {string} File path to be stated.\n* Returns: {Object} An instance of `fs.Stats`.\n\nGet information about a file synchronously.\n",insertText:"statSync"},{label:"unlink",kind:2,detail:"fs.unlink(path, callback)",documentation:"* `path` {string} File path to be removed.\n* `callback` {Function}\n  * `err` {Error|null}\n\nRemoves the file specified by `path` asynchronously.\n",insertText:"unlink"},{label:"unlinkSync",kind:2,detail:"fs.unlinkSync(path)",documentation:"* `path` {string} File path to be removed.\n\nRemoves the file specified by `path` synchronously.\n",insertText:"unlinkSync"},{label:"write",kind:2,detail:"fs.write(fd, buffer, offset, length[, position], callback)",documentation:"* `fd` {integer} File descriptor.\n* `buffer` {Buffer} Buffer that the data will be written from.\n* `offset` {number} Offset of the buffer where from start reading.\n* `length` {number} Number of bytes to write.\n* `position` {number} Specifying where to start write data to the file, if `null` or `undefined`, write at the current position.\n* `callback` {Function}\n  * `err` {Error|null}\n  * `bytesWrite` {integer}\n  * `buffer` {Object}\n\nWrites `buffer` to the file specified by `fd` asynchronously.\n",insertText:"write"},{label:"writeSync",kind:2,detail:"fs.writeSync(fd, buffer, offset, length[, position])",documentation:"* `fd` {integer} File descriptor.\n* `buffer` {Buffer} Buffer that the data will be written from.\n* `offset` {number} Offset of the buffer where from start reading.\n* `length` {number} Number of bytes to write.\n* `position` {number} Specifying where to start write data to the file, if `null` or `undefined`, write at the current position.\n* Returns: {number} Number of bytes written.\n\nWrites buffer to the file specified by `fd` synchronously.\n\n```js\nvar fs = require('fs');\n\nvar file = 'test.txt'\nvar data = new Buffer('IoT.js');\n\nvar fd = fs.openSync(file, 'w');\nvar bytes = fs.writeSync(fd, data, 0, data.length);\n\n//prints: 6\nconsole.log(bytes);\n```\n\n",insertText:"writeSync"},{label:"writeFile",kind:2,detail:"fs.writeFile(path, data, callback)",documentation:"* `path` {string} File path that the `data` will be written.\n* `data` {string|Buffer} String or buffer that contains data.\n* `callback` {Function}\n  * `err` {Error|null}\n\nWrites entire `data` to the file specified by `path` asynchronously.\n",insertText:"writeFile"},{label:"writeFileSync",kind:2,detail:"fs.writeFileSync(path, data)",documentation:"* `path` {string} File path that the `data` will be written.\n* `data` {string|Buffer} String or buffer that contains data.\n\nWrites entire `data` to the file specified by `path` synchronously.\n",insertText:"writeFileSync"}],gpio:[{label:"open",kind:2,detail:"gpio.open(configuration[, callback])",documentation:"* `configuration` {Object}\n  * `pin` {number} Pin number. Mandatory field.\n  * `direction` {GPIO.DIRECTION} Pin direction. **Default:** `GPIO.DIRECTION.OUT`\n  * `mode` {GPIO.MODE} Pin mode. **Default:** `GPIO.MODE.NONE`\n* `callback` {Function}\n  * `error` {Error|null}\n* Returns: {GPIOPin}\n\nOpens the specified GPIO pin and sets the pin configuration.\n\nThe mode argument is ignored on Linux.\n\nThe optional `callback` function will be called after\nopening is completed. The `error` argument is an\n`Error` object on failure or `null` otherwise.\n",insertText:"open"},{label:"write",kind:2,detail:"gpiopin.write(value[, callback])",documentation:"* `value` {number|boolean}\n* `callback` {Function}\n  * `error` {Error|null}\n\nAsynchronously writes out a boolean `value` to a GPIO pin\n(a number `value` is converted to boolean first).\n\nThe optional `callback` function will be called\nafter the write is completed. The `error` argument\nis an `Error` object on failure or `null` otherwise.\n",insertText:"write"},{label:"writeSync",kind:2,detail:"gpiopin.writeSync(value)",documentation:"* `value` {number|boolean}\n\nWrites out a boolean `value` to a GPIO pin synchronously\n(a number `value` is converted to boolean first).\n",insertText:"writeSync"},{label:"read",kind:2,detail:"gpiopin.read([callback])",documentation:"* `callback` {Function}\n  * `error` {Error|null}\n  * `value` {boolean}\n\nAsynchronously reads a boolean value from a GPIO pin.\n\nThe optional `callback` function will be called\nafter the read is completed. The `error` argument\nis an `Error` object on failure or `null` otherwise.\nThe `value` argument contains the boolean value\nof the pin.\n",insertText:"read"},{label:"readSync",kind:2,detail:"gpiopin.readSync()",documentation:"* Returns: {boolean}\n\nReturns the boolean value of a GPIO pin.\n",insertText:"readSync"},{label:"close",kind:2,detail:"gpiopin.close([callback])",documentation:"* `callback` {Function}\n  * `error` {Error|null}\n\nAsynchronously closes a GPIO pin.\n\nThe optional `callback` function will be called\nafter the close is completed. The `error` argument\nis an `Error` object on failure or `null` otherwise.\n",insertText:"close"},{label:"closeSync",kind:2,detail:"gpiopin.closeSync()",documentation:"\nCloses a GPIO pin.\n",insertText:"closeSync"}],http:[{label:"createServer",kind:2,detail:"http.createServer([requestListener])",documentation:"* `requestListener` {Function}\n  * request {http.IncomingMessage}\n  * response {http.ServerResponse}\n* Returns: {http.Server}\n\nThe `requestListener` is a function which is automatically added to the `'request'` event.\n",insertText:"createServer"},{label:"request",kind:2,detail:"http.request(options[, callback])",documentation:"* `options` {Object}\n  * `host` {string} A domain name or IP address of the server to issue the request to. Defaults to 'localhost'.\n  * `hostname` {string} Alias for host.\n  * `port` {number} Port of remote server. Defaults to 80.\n  * `method` {string} A string specifying the HTTP request method. Defaults to 'GET'.\n  * `path` {string} Request path. Defaults to '/'. Should include query string if any. E.G. '/index.html?page=12'. An exception is thrown when the request path contains illegal characters. Currently, only spaces are rejected but that may change in the future.\n  * `headers` {Object} An object containing request headers.\n* `callback` {Function}\n  * `response` {http.IncomingMessage}\n* Returns: {http.ClientRequest}\n",insertText:"request"},{label:"get",kind:2,detail:"http.get(options[, callback])",documentation:"* `options` {Object}\n* `callback` {Function}\n  * `response` {http.IncomingMessage}\n* Returns: {http.ClientRequest}\n\nSame as `http.request` except that `http.get` automatically call `req.end()` at the end.\n",insertText:"get"},{label:"listen",kind:2,detail:"server.listen(port[, hostname][, backlog][, callback])",documentation:"* `port` {number}\n* `host` {string}\n* `backlog` {number}\n* `callback` {Function}\n\nWait for new TCP connection with specified port and hostname. If no hostname is provided, server accepts any IP address.\n`backlog` is maximum pending connections. Default backlog length is 511 (not 512).\n`callback` will be called when server has been bound.\n",insertText:"listen"},{label:"close",kind:2,detail:"server.close([callback])",documentation:"* `callback` {Function}\n\nStop accepting new connection to this server. However, the existing connections are preserved. When server is finally closed after all connections are closed, a callback is called.\n",insertText:"close"},{label:"setTimeout",kind:2,detail:"server.setTimeout(ms, cb)",documentation:"\n* `ms` {number}\n* `cb` {Function}\n\nRegisters cb for `'timeout'` event and sets socket's timeout value to ms. This event will be triggered by the underlying socket's 'timeout' event.\n\nIf cb is not provided, the socket will be destroyed automatically after timeout.\nIf you provide cb, you should handle the socket's timeout.\n\nDefault timeout for server is 2 minutes.\n",insertText:"setTimeout"},{label:"end",kind:2,detail:"response.end([data][, callback])",documentation:"* `data` {Buffer | string}\n* `callback` {Function}\n\nFinishes sending the response.\n\nIf `data` is provided, it sends `data` first, and finishes.\nIf `callback` is specified, it is called when the response stream is finished.\n",insertText:"end"},{label:"getHeader",kind:2,detail:"response.getHeader(name)",documentation:"* `name` {string}\n\nReturns `name` field of response's header\n",insertText:"getHeader"},{label:"removeHeader",kind:2,detail:"response.removeHeader(name)",documentation:"* `name` {string}\n\nRemoves `name` field from response's header\n",insertText:"removeHeader"},{label:"setHeader",kind:2,detail:"response.setHeader(name, value)",documentation:"* `name` {string}\n* `value` {string}\n\nSets response's header field(`name`) to `value`. If the field exists, it overwrites the existing value.\n",insertText:"setHeader"},{label:"setTimeout",kind:2,detail:"response.setTimeout(ms, cb)",documentation:"\n* `ms` {number}\n* `cb` {Function}\n\nRegisters cb for 'timeout' event and set socket's timeout value to ms. This event will be triggered by the underlying socket's 'timeout' event.\n",insertText:"setTimeout"},{label:"write",kind:2,detail:"response.write(data[, callback])",documentation:"* `data` {Buffer | string}\n* `callback` {Function}\n\nSends `data` as a response body. `callback` will be called when data is flushed.\n",insertText:"write"},{label:"writeHead",kind:2,detail:"response.writeHead(statusCode[, statusMessage][, headers])",documentation:"* `statusCode` {number}\n* `statusMessage` {string}\n* `headers` {Object}\n\nSets response's header. `headers` is a map between field and value in header.\n\n\n## Class: http.ClientRequest\n\nThis object is created internally and returned from http.request(). It represents an in-progress request whose header has already been queued.\n",insertText:"writeHead"},{label:"end",kind:2,detail:"request.end([data][, callback])",documentation:"* `data` {Buffer | string}\n* `callback` {Function}\n\nFinishes sending the request.\n\nIf `data` is provided, it sends `data` first, and finishes.\nIf `callback` is specified, it is called when the request stream is finished.\n",insertText:"end"},{label:"setTimeout",kind:2,detail:"request.setTimeout(ms, cb)",documentation:"\n* `ms` {number}\n* `cb` {Function}\n\nRegisters cb for 'timeout' event and set socket's timeout value to ms. This event will be triggered by the underlying socket's 'timeout' event.\n\nIf cb is not provided, the socket will be destroyed automatically after timeout.\nIf you provides cb, you should handle the socket's timeout.\n",insertText:"setTimeout"},{label:"write",kind:2,detail:"request.write(data[, callback])",documentation:"* `data` {Buffer | string}\n* `callback` {Function}\n\nSends `data` as a request body. `callback` will be called when data is flushed.\n\n\n## Class: http.IncomingMessage\n\nhttp.IncomingMessage inherits `Stream.readable`.\n",insertText:"write"}],https:[{label:"request",kind:2,detail:"https.request(options[, callback])",documentation:"* `options` {Object}\n  * `host` {string} A domain name or IP address of the server to issue the request to. **Default:** 'localhost'.\n  * `hostname` {string} Alias for host.\n  * `port` {number} Port of remote server. **Default:** 80.\n  * `method` {string} A string specifying the HTTPS request method. **Default:** 'GET'.\n  * `path` {string} Request path. **Default:** '/'. Should include query string if any. E.G. '/index.html?page=12'. An exception is thrown when the request path contains illegal characters. Currently, only spaces are rejected but that may change in the future.\n  * `headers` {Object} An object containing request headers.\n  * `auth` {string} Optional Basic Authentication in the form `username:password`. Used to compute HTTPS Basic Authentication header.\n  * `ca` {string} Optional file path to CA certificate. Allows to override system trusted CA certificates.\n  * `cert` {string} Optional file path to client authentication certificate in PEM format.\n  * `key` {string} Optional file path to private keys for client cert in PEM format.\n  * `rejectUnauthorized` {boolean} Optional Specify whether to verify the Server's certificate against CA certificates. WARNING - Making this `false` may be a security risk. **Default:** `true`\n* `callback` {Function}\n  * `response` {https.IncomingMessage}\n* Returns: {https.ClientRequest}\n",insertText:"request"},{label:"get",kind:2,detail:"https.get(options[, callback])",documentation:"* `options` {Object}\n  * `host` {string} A domain name or IP address of the server to issue the request to. **Default:** 'localhost'.\n  * `hostname` {string} Alias for host.\n  * `port` {number} Port of remote server. **Default:** 80.\n  * `method` {string} A string specifying the HTTPS request method. **Default:** 'GET'.\n  * `path` {string} Request path. **Default:** '/'. Should include query string if any. E.G. '/index.html?page=12'. An exception is thrown when the request path contains illegal characters. Currently, only spaces are rejected but that may change in the future.\n  * `headers` {Object} An object containing request headers.\n  * `auth` {string} Optional Basic Authentication in the form `username:password`. Used to compute HTTPS Basic Authentication header.\n  * `ca` {string} Optional file path to CA certificate. Allows to override system trusted CA certificates.\n  * `cert` {string} Optional file path to client authentication certificate in PEM format.\n  * `key` {string} Optional file path to private keys for client cert in PEM format.\n  * `rejectUnauthorized` {boolean} Optional Specify whether to verify the Server's certificate against CA certificates. WARNING - Making this `false` may be a security risk. **Default:** `true`\n* `callback` {Function}\n  * `response` {https.IncomingMessage}\n* Returns: {https.ClientRequest}\n\nSame as `https.request` except that `https.get` automatically call `req.end()` at the end.\n",insertText:"get"},{label:"abort",kind:2,detail:"request.abort()",documentation:"Will abort the outgoing request, dropping any data to be sent/received and destroying the underlying socket.\n\n### request.aborted\nIf the request has been aborted, this contains the time at which the request was aborted in milliseconds since epoch as `Number`.\n",insertText:"abort"},{label:"setTimeout",kind:2,detail:"request.setTimeout(ms, cb)",documentation:"* `ms` {number}\n* `cb` {Function}\n\nRegisters cb for 'timeout' event and set socket's timeout value to ms. This event will be triggered by the underlying socket's 'timeout' event.\n\nIf cb is not provided, the socket will be destroyed automatically after timeout.\nIf you provides cb, you should handle the socket's timeout.\n\n\n## Class: https.IncomingMessage\n\nThis object is created internally and returned to the callback in https.request(). It represents the response sent by a server to a request.\n\nhttps.IncomingMessage inherits [`Stream.readable`](IoT.js-API-Stream.md). See it's documentation to read incoming data from an HTTP request. Notable events are `'data'` (fired when there is data to read), `'close'`, `'end'` (Request has ended) and the method `readable.read()`.\n\n### message.headers\nHTTPS header object.\n\n### message.method\nRequest's method as `string`\n\n### message.statusCode\nHTTPS response status code as `number` of 3-digit.\n\n### message.statusMessage\nHTTPS response status message as `string`\n\n### message.url\nRequests URL as `string`\n",insertText:"setTimeout"}],i2c:[{label:"open",kind:2,detail:"i2c.open(configuration[, callback])",documentation:"* `configuration` {Object} Configuration for open I2CBus.\n  * `device` {string} Device path. (only on Linux)\n  * `bus` {number} The specified bus number. (NuttX and TizenRT only)\n  * `address` {number} Device address.\n* `callback` {Function}\n  * `err` {Error|null}\n  * `i2cBus` {Object} An instance of I2CBus.\n* Returns: {Object} An instance of I2CBus.\n\nGet I2CBus object with configuration asynchronously.\n",insertText:"open"},{label:"openSync",kind:2,detail:"i2c.openSync(configuration)",documentation:"* `configuration` {Object} Configuration for open I2CBus.\n  * `device` {string} Device path. (only on Linux)\n  * `bus` {number} The specified bus number. (NuttX and TizenRT only)\n  * `address` {number} Device address.\n* Returns: {Object} An instance of I2CBus.\n\nGet I2CBus object with configuration synchronously.\n",insertText:"openSync"},{label:"read",kind:2,detail:"i2cbus.read(length[, callback])",documentation:"* `length` {number} Number of bytes to read.\n* `callback` {Function}\n  * `err` {Error|null}\n  * `res` {Array} Array of bytes.\n\nRead bytes from I2C device asynchronously.\n",insertText:"read"},{label:"readSync",kind:2,detail:"i2cbus.readSync(length)",documentation:"* `length` {number} Number of bytes to read.\n* Returns: {Array} Array of bytes.\n\nRead bytes from I2C device synchronously.\n",insertText:"readSync"},{label:"write",kind:2,detail:"i2cbus.write(bytes[, callback])",documentation:"* `bytes` {Array} Array of bytes to write.\n* `callback` {Function}\n  * `err` {Error|null}\n\nWrite bytes to I2C device asynchronously.\n",insertText:"write"},{label:"writeSync",kind:2,detail:"i2cbus.writeSync(bytes)",documentation:"* `bytes` {Array} Array of bytes to write.\n* `callback` {Function}\n  * `err` {Error|null}\n\nWrite bytes to I2C device synchronously.\n",insertText:"writeSync"},{label:"close",kind:2,detail:"i2cbus.close()",documentation:"* `callback` {Function}\n  * `err` {Error|null}\n\nClose I2C device asynchronously.\n",insertText:"close"},{label:"closeSync",kind:2,detail:"i2cbus.closeSync()",documentation:"\nClose I2C device synchronously.\n",insertText:"closeSync"}],module:[{label:"require",kind:2,detail:"require(id)",documentation:"* `id` {string} Module name to be loaded.\n\nLoads the module named `id`.\n",insertText:"require"}],net:[{label:"connect",kind:2,detail:"net.connect(options[, connectListener])",documentation:"* `options` {Object} An object which specifies the connection options.\n* `connectListener` {Function} Listener for the `'connect'` event.\n* Returns {net.Socket}.\n\nCreates a new `net.Socket` and automatically connects with the supplied `options`.\nThe `options` object specifies the following information:\n* `port` {number} Port connect to (required).\n* `host` {string} Host connect to (optional, **Default:** `localhost`).\n* `family` {number} Version of IP stack.\n\nThe `options` are passed to both the `net.Socket` constructor and the `socket.connect` method.\nThe `connectListener` is automatically registered as a `'connect'` event listener.\n",insertText:"connect"},{label:"connect",kind:2,detail:"net.connect(port[, host][, connectListener])",documentation:"* `port` {number} Port the client should connect to.\n* `host` {string} Host the client should connect to. **Default:** `localhost`.\n* `connectListener` {Function} Listener for the `'connect'` event.\n* Returns {net.Socket}.\n\nCreates a new `net.Socket` and automatically connects to the supplied `port` and `host`.\nIf host is omitted, `localhost` will be assumed.\nThe `connectListener` is automatically registered as a `'connect'` event listener.\n",insertText:"connect"},{label:"createConnection",kind:2,detail:"net.createConnection(options[, connectListener])",documentation:"* `options` {Object} An object which specifies the connection options.\n* `connectListener` {Function} Listener for the `'connect'` event.\n* Returns {net.Socket}.\n\nCreates a new `net.Socket` and automatically connects with the supplied `options`.\nThe `options` are passed to both the `net.Socket` constructor and the `socket.connect` method.\nThe `options` object specifies the following information:\n* `port` {number} Port connect to (required).\n* `host` {string} Host connect to (optional, **Default:** `localhost`).\n* `family` {number} Version of IP stack.\n\nThe `connectionListener` is automatically registered as a `'connect'` event listener.\n",insertText:"createConnection"},{label:"createConnection",kind:2,detail:"net.createConnection(port[, host][, connectListener])",documentation:"* `port` {number} Port the client should connect to.\n* `host` {string} Host the client should connect to. **Default:** `localhost`.\n* `connectListener` {Function} Listener for the `'connect'` event.\n* Returns {net.Socket}.\n\n\nCreates a new `net.Socket` and automatically connects to the supplied `port` and `host`.\nIt is equivalent to `new net.Socket()` followed by `socket.connect()`.\nIf host is omitted, `localhost` will be assumed.\nThe `connectionListener` is automatically registered as a `'connect'` event listener.\n",insertText:"createConnection"},{label:"createServer",kind:2,detail:"net.createServer([options][, connectionListener])",documentation:"* `options` {Object} An object which specifies the connection options **Default:** `{ allowHalfOpen: false }`.\n* `connectListener` {Function} Listener for the `'connection'` event.\n* Returns {net.Server}.\n\nCreates a TCP server according to `options`.\nThe `connectionListener` is automatically registered as a `'connection'` event listener.\nIf `allowHalfOpen` is true, then the socket becomes non-readable, but still writable. You should call the `socket.end()` method explicitly.\n",insertText:"createServer"},{label:"close",kind:2,detail:"server.close([closeListener])",documentation:"* `closeListener` {Function} Listener for the `'close'` event.\n\nStops listening new arriving connection.\nServer socket will be finally closed when all existing connections are closed, then emits `'close'` event.\nThe `closeListener` is registered as a `'close'` event listener.\n",insertText:"close"},{label:"listen",kind:2,detail:"server.listen(port[, host][, backlog][, listenListener])",documentation:"* `port` {number} Port the client should connect to.\n* `host` {string} Host the client should connect to.\n* `backlog` {number} The maximum length of the queue of pending connections. **Default:** `511`.\n* `listenListener` {Function} Listener for the `'listening'` event.\n* Returns: {Object} The self instance of `net.Server`.\n\nBegin accepting connections on the specified port and hostname.\nIf the hostname is omitted, the server will accept connections on any IPv4 address (0.0.0.0).\n",insertText:"listen"},{label:"listen",kind:2,detail:"server.listen(options[, listenListener])",documentation:"* options {Object} An object which specifies the connection options.\n* `listenListener` {Function} Listener for the `'listening'` event.\n\nIt behaves as the `server.listen(port[, host][, backlog][, listenListener])` function above.\n\nThe option object supports the following properties:\n* `port` {number} Port the client should connect to.\n* `host` {string} Host the client should connect to.\n* `backlog` {number} The maximum length of the queue of pending connections. **Default:** `511`.\n",insertText:"listen"},{label:"connect",kind:2,detail:"socket.connect(options[, connectListener])",documentation:"* `options` {Object} An object which specifies the connection information.\n* `connectListener` {Function} Listener for the `'connect'` event.\n* Returns {net.Socket}.\n\nCreates a new socket object and automatically connects with the supplied `options`.\n\nThe `options` object specifies following information:\n* `port` {number} Port connect to (required).\n* `host` {string}  Host connect to (optional, **Default:** `localhost`).\n* `family` {number} Version of IP stack.\n\nThe `connectionListener` is automatically registered as a `'connect'` event listener which will be emitted when the connection is established.\n",insertText:"connect"},{label:"connect",kind:2,detail:"socket.connect(port[, host][, connectListener])",documentation:"* `port` {number} Port the client should connect to.\n* `host` {string} Host the client should connect to. **Default:** `localhost`.\n* `connectListener` {Function} Listener for the `'connect'` event.\n* Returns {net.Socket}.\n\nCreates a new socket and automatically connects with the supplied `port` and `host`.\n\n`connectionListener` is automatically registered as a `'connect'` event listener which will be emitted when the connection is established.\n",insertText:"connect"},{label:"destroy",kind:2,detail:"socket.destroy()",documentation:"\nEnsures that no more I/O activity happens on the socket and destroys the socket as soon as possible.\n",insertText:"destroy"},{label:"end",kind:2,detail:"socket.end([data][, callback])",documentation:"\n* `data` {Buffer|string}\n* `callback` {Function}\n\nHalf-closes the socket. The socket is no longer writable.\nIf `data` is given it is equivalent to `socket.write(data)` followed by `socket.end()`.\n",insertText:"end"},{label:"pause",kind:2,detail:"socket.pause()",documentation:"\nPauses reading data.\n",insertText:"pause"},{label:"resume",kind:2,detail:"socket.resume()",documentation:"\nResumes reading data after a call to `pause()`.\n",insertText:"resume"},{label:"setKeepAlive",kind:2,detail:"socket.setKeepAlive([enable][, initialDelay])",documentation:"\n* `enable` {boolean} **Default:** `false`.\n* `initialDelay {number} **Default:** `0`.\n\nEnables or disables keep-alive functionality.\n",insertText:"setKeepAlive"},{label:"setTimeout",kind:2,detail:"socket.setTimeout(timeout[, callback])",documentation:"* `timeout` {number} Timeout number.\n* `callback` {Function} Registered as a `'timeout'` event listener.\n\nSets timeout for the socket.\n\nIf the socket is inactive for `timeout` milliseconds, `'timeout'` event will emit.\n",insertText:"setTimeout"},{label:"write",kind:2,detail:"socket.write(data[, callback])",documentation:"* `data` {Buffer|string} Data to write.\n* `callback` {Function} Executed function (when the data is finally written out).\n\nSends `data` on the socket.\n\nThe optional `callback` function will be called after the given data is flushed through the connection.\n",insertText:"write"}],pwm:[{label:"open",kind:2,detail:"pwm.open(configuration[, callback])",documentation:"* `configuration` {Object} Configuration object which can have the following properties.\n  * `pin` {number} The pin number to use with this PWM object (mandatory configuration).\n  * `chip` {number} The PWM chip number (only on Linux). **Default:** `0`.\n  * `period` {number} The period of the PWM signal, in seconds (positive number).\n  * `frequency` {integer} In Hz (positive integer).\n  * `dutyCycle` {number} The active time of the PWM signal, must be within the `0.0` and `1.0` range.\n* `callback` {Function} Callback function.\n  * `err` {Error|null} The error object or `null` if there were no error.\n* Returns: `<PWMPin>`\n\nOpens PWM pin with the specified configuration.\n\nTo correctly open a PWM pin one must know the correct pin number:\n* On Linux, `pin` is a number which is `0` or `1`.\n* On NuttX, you have to know pin name. The pin name is defined in target board module. For more module information, please see below list.\n  * [STM32F4-discovery](../targets/nuttx/stm32f4dis/IoT.js-API-Stm32f4dis.md#pwm-pin)\n\n",insertText:"open"},{label:"setPeriod",kind:2,detail:"pwmpin.setPeriod(period[, callback])",documentation:"* `period` {number} The period of the PWM signal, in seconds (positive number).\n* `callback` {Function}\n  * `err` {Error|null} The error object or `null` if there were no error.\n\nThe `setPeriod` method allows the configuration of the period of the PWM signal in seconds.\nThe `period` argument must specified and it should be a positive number.\n\nConfiguration is done asynchronously and the `callback` method is invoked after the\nperiod is configured to the new value or if an error occured.\n",insertText:"setPeriod"},{label:"setPeriodSync",kind:2,detail:"pwmpin.setPeriodSync(period)",documentation:"* `period` {number} The period of the PWM signal, in seconds (positive number).\n\nThe `setPeriodSync` method allows the configuration of the period of the PWM signal in seconds.\nThe `period` argument must specified and it should be a positive number.\n\nConfiguration is done synchronously and will block till the period is configured.\n",insertText:"setPeriodSync"},{label:"setFrequency",kind:2,detail:"pwmpin.setFrequency(frequency[, callback])",documentation:"* `frequency` {integer} In Hz (positive integer).\n* `callback` {Function}\n  * `err` {Error|null} The error object or `null` if there were no error.\n\nThe `setFequency` method congifures the frequency of the PWM signal.\n`frequency` is the measurement of how often the signal is repeated in a single period.\n\nConfiguration is done asynchronously and the `callback` method is invoked after the\nfrequency is configured to the new value or if an error occured.\n",insertText:"setFrequency"},{label:"setFrequencySync",kind:2,detail:"pwmpin.setFrequencySync(frequency)",documentation:"* `frequency` {integer} In Hz (positive integer).\n\nThe `setFequencySync` method congifures the frequency of the PWM signal.\n`frequency` is the measurement of how often the signal is repeated in a single period.\n\nConfiguration is done synchronously and will block till the frequency is configured.\n",insertText:"setFrequencySync"},{label:"setDutyCycle",kind:2,detail:"pwmpin.setDutyCycle(dutyCycle[, callback])",documentation:"* `dutyCycle` {number} Must be within the `0.0` and `1.0` range.\n* `callback` {Function}\n  * `err` {Error|null} The error object or `null` if there were no error.\n\nThe `setDutyCycle` method allows the configuration of the duty cycle of the PWM signal.\nThe duty cycle is the ratio of the pulse width in one period.\n\nConfiguration is done asynchronously and the `callback` method is invoked after the\nduty cycle is configured to the new value or if an error occured.\n",insertText:"setDutyCycle"},{label:"setDutyCycleSync",kind:2,detail:"pwmpin.setDutyCycleSync(dutyCycle)",documentation:"* `dutyCycle` {number} Must be within the `0.0` and `1.0` range.\n\nThe `setDutyCycleSync` method allows the configuration of the duty cycle of the PWM signal.\nThe duty cycle is the ratio of the pulse width in one period.\n\nConfiguration is done synchronously and will block till the duty cycle is configured.\n",insertText:"setDutyCycleSync"},{label:"setEnable",kind:2,detail:"pwmpin.setEnable(enable[, callback])",documentation:"* `enable` {boolean}\n* `callback` {Function}\n  * `err` {Error|null} The error object or `null` if there were no error.\n\nThe `setEnable` method can turn on/off the generation of the PWM signal.\nIf the `enable` argument is `true` then the PWN signal generation is turned on.\nOtherwise the signal generation is turned off.\n\nAfter enabling/disabling the signal generation the `callback` is invoked.\n",insertText:"setEnable"},{label:"setEnableSync",kind:2,detail:"pwmpin.setEnableSync(enable)",documentation:"* `enable` {boolean}\n\nThe `setEnableSync` method can turn on/off the generation of the PWM signal.\nIf the `enable` argument is `true` then the PWN signal generation is turned on.\nOtherwise the signal generation is turned off.\n",insertText:"setEnableSync"},{label:"close",kind:2,detail:"pwmpin.close([callback])",documentation:"* `callback` {Function}\n  * `err` {Error|null} The error object or `null` if there were no error.\n\nThe `close` method closes the PWM pin asynchronously.\n\nThe `callback` method will be invoked after the PWM device is released.\n",insertText:"close"},{label:"closeSync",kind:2,detail:"pwmpin.closeSync()",documentation:"\nThe `closeSync` method closes the PWM pin synchronously.\n",insertText:"closeSync"}],process:[{label:"chdir",kind:2,detail:"process.chdir(path)",documentation:"* `path` {string} The path to change working directory to.\n\nThe `chdir` method changes the current working directory of the IoT.js process or\nthrows an exception if the operation fails (for instance the `path` specified does not exist).\n",insertText:"chdir"},{label:"cwd",kind:2,detail:"process.cwd()",documentation:"* Returns: {string}\n\nThe `cwd()` call returns the current working directory of the IoT.js process.\n",insertText:"cwd"},{label:"exit",kind:2,detail:"process.exit([code])",documentation:"* `code` {integer} The exit code. **Default:** `0`\n\nThe `exit()` method instructs the IoT.js to terminate the process synchronously with an exit status of `code`.\nIf `code` is not specified, exit uses the `process.exitCode` value which defaults to `0`.\nIoT.js will not exit till all `'exit'` event listeners are called.\n\nThe `process.exit()` method call will force the process to exit as quickly as possible,\nignoring if there is any asynchronous operations still pending.\n\nIn most situations, it is not necessary to explcitly call `process.exit()`. The IoT.js will exit on its own\nif there is no additional work pending in the event loop. The `process.exitCode` property can be set\nto exit code when the process exits gracefully.\n\nIf it is necessary to terminate the IoT.js process due to an error condition, throwing an\nuncaught error and allowing the process to terminate accordingly is advised instead of calling `process.exit()`.\n",insertText:"exit"},{label:"nextTick",kind:2,detail:"process.nextTick(callback, [...args])",documentation:'* `callback` {Function}\n* `...args` {any} Additional arguments to pass when invoking the callback\n\nThe `nextTick` method adds the `callback` method to the "next tick queue".\nOnce the current turn of the event loop is completed, all callbacks currently in the next tick queue will be called.\n\nThis is not a simple alias to `setTimeout` call. It runs before any additional I/O events.\n',insertText:"nextTick"}],spi:[{label:"open",kind:2,detail:"spi.open(configuration[, callback])",documentation:"* `configuration` {Object}\n  * `device` {string} The specified path for `spidev`. (only on Linux)\n  * `bus` {number} The specified bus number. (NuttX and TizenRT only)\n  * `mode` {SPI.MODE} The combinations of the polarity and phase. **Default:** `SPI.MODE[0]`.\n  * `chipSelect` {SPI.CHIPSELECT} Chip select state. **Default:** `SPI.CHIPSELECT.NONE`.\n  * `maxSpeed` {number} Maximum transfer speed. **Default:** `500000`.\n  * `bitsPerWord` {number} Bits per word to send (should be 8 or 9). **Default:** `8`.\n  * `bitOrder` {SPI.BITORDER} Order of the bits shifted out of and into the SPI bus. Default: `SPI.BITORDER.MSB`.\n  * `loopback` {boolean} Using loopback. **Default:** `false`.\n* `callback` {Function}.\n  * `err` {Error|null}.\n* Returns: {SPIBus}.\n\nOpens an SPI device with the specified configuration.\n",insertText:"open"},{label:"transfer",kind:2,detail:"spibus.transfer(txBuffer, rxBuffer[, callback])",documentation:"* `txBuffer` {Array|Buffer}.\n* `rxBuffer` {Array|Buffer}.\n* `callback` {Function}.\n  * `err` {Error|null}.\n\nWrites and reads data from the SPI device asynchronously.\nThe `txBuffer` and `rxBuffer` must have equal length.\n",insertText:"transfer"},{label:"transferSync",kind:2,detail:"spibus.transferSync(txBuffer, rxBuffer)",documentation:"* `txBuffer` {Array|Buffer}.\n* `rxBuffer` {Array|Buffer}.\n\nWrites and reads data from the SPI device synchronously.\nThe `txBuffer` and `rxBuffer` must have equal length.\n",insertText:"transferSync"},{label:"close",kind:2,detail:"spibus.close([callback])",documentation:"* `callback` {Function}.\n  * `err` {Error|null}.\n\nCloses the SPI device asynchronously.\n\nThe `callback` function will be called after the SPI device is closed.\n",insertText:"close"},{label:"closeSync",kind:2,detail:"spibus.closeSync()",documentation:"\nCloses the SPI device synchronously.\n",insertText:"closeSync"}],stream:[{label:"isPaused",kind:2,detail:"readable.isPaused()",documentation:"* Returns: {boolean}\n\nReturns `true` if the [`Readable`](#class-streamreadable)\nstream is in paused mode. Otherwise the stream is in\nflowing mode. By default the stream starts in paused mode.\n",insertText:"isPaused"},{label:"pause",kind:2,detail:"readable.pause()",documentation:"* Returns: {Readable}\n\nStops emitting [`'data'`](#event-data) events if the\nstream is in flowing mode and sets paused mode. No\neffect otherwise.\n",insertText:"pause"},{label:"read",kind:2,detail:"readable.read([size])",documentation:"* `size` {number} Specify how much data will be read.\n* Returns: {Buffer|null}\n\nThe `readable.read()` method pulls some data out of the\ninternal buffer and returns it. If no data is available\n`null` is returned instead.\n\nNote: currently all data must be read.\n",insertText:"read"},{label:"resume",kind:2,detail:"readable.resume()",documentation:"* Returns: {Readable}\n\nStarts emitting [`'data'`](#events-data) events if the\nstream is in paused mode and sets flowing mode. No effect\notherwise.\n",insertText:"resume"},{label:"push",kind:2,detail:"readable.push(chunk)",documentation:"* `chunk` {Buffer|string}\n\n**This method is only for implementing a new\n[`Readable`](#class-streamreadable) stream type.**\n\nPush a chunk of data to the underlying `Buffer` of\nthis stream. The data can be read by using\neither [`readable.read()`](#readablereadsize) method\nor [`'data'`](#event-data) event of this stream.\n",insertText:"push"},{label:"end",kind:2,detail:"writable.end([chunk[, callback]])",documentation:"* `chunk` {Buffer|string} Final data to write.\n* `callback` {Function}\n\nCalling this function signals that no more data will\nbe written to the Writable. The optional `chunk`\nargument allows writing a final chunk of data.\nIf `chunk` is `null` no data is written.\n\nThe optional `callback` function is attached\nas a listener for the ['finish'](#event-finish) event.\n",insertText:"end"},{label:"write",kind:2,detail:"writable.write(chunk[, callback])",documentation:"* `chunk` {Buffer|string} Data to write.\n* `callback` {Function} Called when this chunk of data is flushed.\n* Returns: {boolean}\n\nConverts `chunk` into a sequence of bytes and writes this data\nto the stream. An optional `callback` function is called when\nthe data is flushed.\n\nThe returned value is `true` if writing can be continued\nright after calling this method. Otherwise the returned\nvalue is `false` and no data should be written until the\n[`'drain'`](#event-drain) event is received.\n",insertText:"write"}],timers:[{label:"setTimeout",kind:2,detail:"setTimeout(callback, delay[, args..])",documentation:"\n* `callback` {Function} The function to call when the timer elapses.\n  * `...args` {any}\n* `delay` {number} The number of milliseconds to wait before calling the `callback`.\n* `...args` {any} - Optional arguments to pass when the `callback` is called.\n* Returns: {Timeout}\n\nSchedules execution of a one-time `callback` after `delay` milliseconds. Returns a `Timeout` for use with `clearTimeout()`. If `callback` is not a function, a `TypeError` will be thrown.\n",insertText:"setTimeout"},{label:"clearTimeout",kind:2,detail:"clearTimeout(timeout)",documentation:"\n* `timeout` {Timeout} A Timeout object returned by `setTimeout()`.\n\nCancels a `Timeout` object created by `setTimeout()`.\n",insertText:"clearTimeout"},{label:"setInterval",kind:2,detail:"setInterval(callback, delay[, args..])",documentation:"* `callback` {Function} The function to call when the timer elapses.\n  * `...args` {any}\n* `delay` {number} The number of milliseconds to wait before calling the `callback`.\n* `...args` {any} - Optional arguments to pass when the `callback` is called.\n* Returns: {Timeout}\n\nSchedules repeated execution of `callback` every `delay` milliseconds. Returns a `Timeout` object for use with `clearInterval()`. If `callback` is not a function, a `TypeError` will be thrown.\n",insertText:"setInterval"},{label:"clearInterval",kind:2,detail:"clearInterval(timeout)",documentation:"\n* `timeout` {Timeout} A Timeout object as returned by `setInterval()`.\n\nCancels a `Timeout` object created by `setInterval()`.\n",insertText:"clearInterval"},{label:"ref",kind:2,detail:"timeout.ref()",documentation:"\nWhen called, requests that the IoT.js event loop should not exit as long as the `Timeout` is active.\n",insertText:"ref"}],uart:[{label:"open",kind:2,detail:"uart.open(configuration[, callback])",documentation:"* `configuration` {Object}\n  * `device` {string} Mandatory configuration.\n  * `baudRate` {number} Specifies how fast data is sent over a serial line. **Default:** `9600`.\n  * `dataBits` {number} Number of data bits that are being transmitted. **Default:** `8`.\n* `callback` {Function}.\n  * `err` {Error|null}.\n* Returns: {UARTPort}.\n\nOpens an UARTPort object with the specified configuration.\n\nThe `baudRate` must be equal to one of these values: [0, 50, 75, 110, 134, 150, 200, 300, 600, 1200, 1800, 2400, 4800, 9600, 19200, 38400, 57600, 115200, 230400].\n\nThe `dataBits` must be equal to one of these values: [5, 6, 7, 8].\n\nOn NuttX, you also need to set the properties of the `configuration` in the NuttX configuration file. Using the NuttX menuconfig, it can be found at the `Device Drivers -> Serial Driver Support -> U[S]ART(N) Configuration` section.\n\nYou can read more information about the usage of the UART on stm32f4-discovery board: [STM32F4-discovery](../targets/nuttx/stm32f4dis/IoT.js-API-Stm32f4dis.md#uart).\n",insertText:"open"},{label:"",kind:2,detail:"uartport.write(data[, callback]).",documentation:"* `data` {string}.\n* `callback` {Function}.\n  * `err` {Error|null}.\n\nWrites the given `data` to the UART device asynchronously.\n",insertText:""},{label:"writeSync",kind:2,detail:"uartport.writeSync(data)",documentation:"* `data` {string}.\n\nWrites the given `data` to the UART device synchronously.\n",insertText:"writeSync"},{label:"close",kind:2,detail:"uartport.close([callback])",documentation:"* `callback` {Function}.\n  * `err` {Error|null)}.\n\nCloses the UART device asynchronously.\n\nOn NuttX/STM32F4Discovery, Uart.close() blocks after close().\nIt seems that poll() does not work properly on NuttX for some cases.\n",insertText:"close"},{label:"closeSync",kind:2,detail:"uartport.closeSync()",documentation:"\nCloses the UART device synchronously.\n\nOn NuttX/STM32F4Discovery, Uart.close() blocks after close().\nIt seems that poll() does not work properly on NuttX for some cases.\n",insertText:"closeSync"}]}},akvE:function(e,t,n){"use strict";(function(e){function i(e){return e&&e.__esModule?e:{default:e}}function a(){console.log("IoT.JS Code"),e.holdReady(!0);var t=null,n={editor:null},i={panels:[],sidenav:null},a={backspace:8,tab:9,enter:13,esc:27,end:35,leftArrow:37,upArrow:38,rightArrow:39,downArrow:40,delete:46,zero:48,nine:57,a:65,c:67,x:88,numZero:96,numNine:105,decPoint:110},s=function(){window.require(["vs/editor/editor.main"],function(){r()})},r=function(){n.editor=window.monaco.editor.create(e("#monaco").get(0),{language:"javascript",glyphMargin:!0}),e.holdReady(!1)};if(window.require)s();else{var f=document.createElement("script");f.type="text/javascript",f.src="vs/loader.js",f.addEventListener("load",s),document.body.appendChild(f)}e(function(){var s=new o.default(e("#console-panel")),r=new u.default,f=new l.default(n,r),g=new p.default(f,r),m=new b.default(n.editor,r),y=new _.default,E=new v.default;!function(){f.setWelcomeFile(),window.monaco.languages.registerCompletionItemProvider("javascript",E.getCompletionProvider()),n.editor.onDidChangeModel(function(){t&&t.getEngineMode()!==d.ENGINE_MODE.DISCONNECTED&&f.markBreakpointLines(t,m,y)}),n.editor.onMouseDown(function(e){e.target.type===window.monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN&&t&&t.getEngineMode()!==d.ENGINE_MODE.DISCONNECTED&&f.toggleBreakpoint(e.target.position.lineNumber,t,m,y)})}(),function(){m.initListeners(),m.load(),r.getPanelProperty("chart.active")&&r.initChartPanel(g),n.editor.layout(r.getEditorContainerDimensions())}(),function(){e("#sidenav-toggle-button").on("click",function(){r.toggleSidenav(),r.getPanelProperty("chart.active")&&r.initChartPanel(g),n.editor.layout(r.getEditorContainerDimensions())}),e("#sidenav-extra-modal").on("click",function(){r.toggleSidenavExtra(r.getLastOpenedSidenavExtra())}),e(".extra-sidenav-toggle").on("click",function(t){r.toggleSidenavExtra(e(t.currentTarget).data("eid"))}),e(".sidenav-panel-toggle").on("click",function(i){r.togglePanel(e(i.currentTarget).data("pid")),m.modify("panels."+e(i.currentTarget).data("pid"),r.getPanelProperty(e(i.currentTarget).data("pid")+".active")),r.getPanelProperty("chart.active")?(t&&t.getEngineMode()!==d.ENGINE_MODE.DISCONNECTED&&r.toggleButton(!0,"chart-record-button"),r.initChartPanel(g),r.toggleButton(!0,"export-chart-button")):r.toggleButton(!1,"export-chart-button"),r.getPanelProperty("run.active")&&r.updateRunPanel(c.SURFACE_RUN_UPDATE_TYPE.ALL,t,f),r.getPanelProperty("watch.active")&&r.updateWatchPanelButtons(t),n.editor.layout(r.getEditorContainerDimensions())})}(),function(){e("#open-file-button, #start-open-file-link").on("click",function(){window.File&&window.FileReader&&window.FileList&&window.Blob?e("#hidden-file-input").trigger("click"):s.error("The File APIs are not fully supported in this browser.",!0)}),e("#hidden-file-input").change(function(n){var i=n.target.files,a=!0,o=!1,l=void 0;try{for(var u,d=i[Symbol.iterator]();!(a=(u=d.next()).done);a=!0){var h=u.value;f.fileNameCheck(h.name)?s.error(h.name+" is already loaded.",!0):function(n){var i=new FileReader;i.onload=function(i){f.createNewFile(n.name,i.target.result,!0),r.getPanelProperty("run.active")&&r.updateRunPanel(c.SURFACE_RUN_UPDATE_TYPE.ALL,t,f),e("#save-file-button").hasClass("disabled")&&r.toggleButton(!0,"save-file-button")},i.onerror=function(e){"NotReadableError"===e.target.name.error&&s.error(n.name+" file could not be read.",!0)},i.readAsText(n,"utf-8")}(h)}}catch(e){o=!0,l=e}finally{try{!a&&d.return&&d.return()}finally{if(o)throw l}}e(n.target).val(""),r.isSidenavExtraOpened()&&r.toggleSidenavExtra("file-sidenav")}),e("#new-file-button, #start-new-file-link").on("click",function(t){"start-new-file-link"===t.target.id&&r.toggleSidenavExtra("file-sidenav"),r.toggleSidenavNewFile(),e("#new-file-name").focus()}),e("#new-file-name").keyup(function(t){var n=e("#hidden-new-file-info"),i=e("#new-file-name").val().trim(),s=/^([a-zA-Z0-9_-]{1,}.*)$/,o=!0;n.empty(),s.test(i)||(n.append("<p>The filename must be at least 1 (one) character long.</p>"),o=!1),f.isFileNameTaken(i)&&(n.append("<p>This filename is already taken.</p>"),o=!1),o?(r.toggleButton(!0,"ok-file-name"),t.keyCode===a.enter&&e("#ok-file-name").click()):r.toggleButton(!1,"ok-file-name")}),e("#cancel-file-name").on("click",function(){e("#new-file-name").val(""),e("#hidden-new-file-info").empty(),r.toggleButton(!1,"ok-file-name"),r.toggleSidenavNewFile()}),e("#ok-file-name").on("click",function(n){if(r.buttonIsDisabled(n.target))return!0;f.createNewFile(e("#new-file-name").val().trim(),"",!1),r.getPanelProperty("run.active")&&r.updateRunPanel(c.SURFACE_RUN_UPDATE_TYPE.ALL,t,f),e("#new-file-name").val(""),r.toggleButton(!1,"ok-file-name"),r.toggleSidenavNewFile(),r.toggleSidenavExtra("file-sidenav")}),e("#save-file-button").on("click",function(){if(e("#save-file-button").hasClass("disabled"))return!0;var t=new Blob([f.getFileModelById(f.getActiveID()).getValue()]);O.default.saveAs(t,f.getFileNameById(f.getActiveID())),e("#tab-"+f.getActiveID()).removeClass("unsaved"),f.changeFileSavedProperty(f.getActiveID(),!0),r.toggleSidenavExtra("file-sidenav")})}(),function(){e("#local-storage-reset-button").on("click",function(){m.init(!0)})}(),function(){e("#export-chart-button").on("click",function(e){if(r.buttonIsDisabled(e.target))return!0;g.exportChartData()})}(),function(){e("#host-port").keydown(function(t){-1!==e.inArray(t.keyCode,[a.delete,a.backspace,a.tab,a.esc,a.enter,a.decPoint])||t.keyCode===a.a&&(!0===t.ctrlKey||!0===t.metaKey)||t.keyCode===a.c&&(!0===t.ctrlKey||!0===t.metaKey)||t.keyCode===a.x&&(!0===t.ctrlKey||!0===t.metaKey)||t.keyCode>=a.end&&t.keyCode<=a.rightArrow||(t.shiftKey||t.keyCode<a.zero||t.keyCode>a.nine)&&(t.keyCode<a.numZero||t.keyCode>a.numNine)&&t.preventDefault()}),e("#connect-to-button").on("click",function(n){if(r.buttonIsDisabled(n.target))return!0;if(t&&t.getEngineMode()!==d.ENGINE_MODE.DISCONNECTED)return s.info("Debugger is connected."),!0;var i=e("#host-ip").val()||"localhost",a=e("#host-port").val()||5001;if(a<0||a>65535)return s.error("Address port must between 0 and 65535.",!0),!0;var o=i+":"+a;return s.info("Connect to: "+o),t=new h.default(o,f,r,m,g),!0}),e("#delete-all-button").on("click",function(){t&&t.getEngineMode()!==d.ENGINE_MODE.DISCONNECTED&&t.deleteBreakpoint("all")}),e("#continue-stop-button").on("click",function(e){if(r.buttonIsDisabled(e.target))return!0;t.getEngineMode()===d.ENGINE_MODE.BREAKPOINT?(r.continueCommand(),t.sendResumeExec(d.PROTOCOL.CLIENT.JERRY_DEBUGGER_CONTINUE)):(r.stopCommand(),r.getPanelProperty("chart.active")&&g.deleteTimeoutLoop(),t.encodeMessage("B",[d.PROTOCOL.CLIENT.JERRY_DEBUGGER_STOP]))}),e("#step-button").on("click",function(e){return!!r.buttonIsDisabled(e.target)||(t.getEngineMode()!==d.ENGINE_MODE.BREAKPOINT?(s.error("This action is only available in breakpoint mode.",!0),!0):void t.encodeMessage("B",[d.PROTOCOL.CLIENT.JERRY_DEBUGGER_STEP]))}),e("#finish-button").on("click",function(e){return!!r.buttonIsDisabled(e.target)||(t.getEngineMode()!==d.ENGINE_MODE.BREAKPOINT?(s.error("This action is only available in breakpoint mode.",!0),!0):void t.encodeMessage("B",[d.PROTOCOL.CLIENT.JERRY_DEBUGGER_FINISH]))}),e("#next-button").on("click",function(e){return!!r.buttonIsDisabled(e.target)||(t.getEngineMode()!==d.ENGINE_MODE.BREAKPOINT?(s.error("This action is only available in breakpoint mode.",!0),!0):void t.encodeMessage("B",[d.PROTOCOL.CLIENT.JERRY_DEBUGGER_NEXT]))}),e("#disconnect-button").on("click",function(e){if(r.buttonIsDisabled(e.target))return!0;t.closeConnection()})}(),function(){e("#watch-add-button").on("click",function(t){if(r.buttonIsDisabled(t.target))return!0;e("#watch-add-wrapper").show(),e("#watch-add-input").focus()}),e("#watch-refresh-button").on("click",function(e){if(r.buttonIsDisabled(e.target))return!0;t&&t.getEngineMode()===d.ENGINE_MODE.BREAKPOINT&&f.updateWatchExpressions(t)}),e("#watch-clear-button").on("click",function(n){if(r.buttonIsDisabled(n.target))return!0;e("#watch-list").html(""),f.removeAllWatchExpression(),r.updateWatchPanelButtons(t)}),e("#watch-list").on("click",".watch-li-remove i",function(n){f.removeWatchExpression(e(n.target).parent().data("rid")),e(n.target).parent().parent().remove(),r.updateWatchPanelButtons(t)}),e("#watch-add-input").focusout(function(t){e(t.target).val(""),e("#watch-add-wrapper").hide()}),e("#watch-add-input").on("keypress",function(n){n.keyCode===a.enter&&(""!==e(n.target).val()&&f.addWatchExpression(t,e(n.target).val()),e(n.target).val(""),e("#watch-add-wrapper").hide())})}(),function(){e(".scroll-table").floatThead({autoReflow:!0,position:"fixed",zIndex:800,scrollContainer:function(e){return e.closest(".wrapper")}})}(),function(){e("#chart-record-button").on("click",function(e){if(r.buttonIsDisabled(e.target))return!0;g.startChartWithButton(),t&&t.encodeMessage("B",[d.PROTOCOL.CLIENT.JERRY_DEBUGGER_MEMSTATS])}),e("#chart-stop-button").on("click",function(e){if(r.buttonIsDisabled(e.target))return!0;g.stopChartWithButton()}),e("#chart-reset-button").on("click",function(e){if(r.buttonIsDisabled(e.target))return!0;g.resetChart(),g.resizeChart(r.getPanelProperty("chart.height"),r.getPanelProperty("chart.width"))})}(),function(){e("#output-clear-button").on("click",function(){k.default.clearElement(e("#output-panel"))})}(),function(){e(".selectable").selectable({filter:"li",cancel:".handle"}),e("#run-chooser-dest").sortable({handle:".handle",axis:"y",update:function(t,n){var i=parseInt(e(n.item[0]).data("sid"));f.getFileDataById(i).scheduled&&f.moveFileInUploadList(f.getUploadList().indexOf(i),e(n.item[0]).index())}}),r.getPanelProperty("run.active")&&r.updateRunPanel(c.SURFACE_RUN_UPDATE_TYPE.ALL,t,f),e("#run-right-button").on("click",function(n){if(r.buttonIsDisabled(n.target))return!0;e("#run-chooser-src .ui-selected").each(function(t,n){e(n).detach().appendTo("#run-chooser-dest").removeClass("ui-selected").addClass("sortable").children("div").removeClass("hidden");var i=parseInt(e(n).data("sid"));f.getFileDataById(i).scheduled||f.addFileToUploadList(i,e(n).index())}),r.updateRunPanel(c.SURFACE_RUN_UPDATE_TYPE.BUTTON,t,f)}),e("#run-left-button").on("click",function(n){if(r.buttonIsDisabled(n.target))return!0;e("#run-chooser-dest .ui-selected").each(function(t,n){e(n).detach().appendTo("#run-chooser-src").removeClass("sortable").removeClass("ui-selected").children("div").addClass("hidden");var i=parseInt(e(n).data("sid"));f.getFileDataById(i).scheduled&&f.removeFileFromUploadList(i)}),r.updateRunPanel(c.SURFACE_RUN_UPDATE_TYPE.BUTTON,t,f)}),e("#run-ok-button").on("click",function(n){if(r.buttonIsDisabled(n.target))return!0;e("#run-chooser-dest").is(":empty")||(f.setUploadStarted(!0),f.isFileInUploadList(0)||(f.addFileToUploadList(0,f.getUploadList().length),r.appendChooserLi(e("#run-chooser-dest"),"","hidden","run-context-reset-sid",0,"Context Reset")),r.updateRunPanel(c.SURFACE_RUN_UPDATE_TYPE.JQUI,t,f),r.updateRunPanel(c.SURFACE_RUN_UPDATE_TYPE.BUTTON,t,f),t.sendClientSource())}),e("#run-clear-button").on("click",function(e){if(r.buttonIsDisabled(e.target))return!0;f.getAllData().forEach(function(e){e.scheduled&&f.removeFileFromUploadList(e.id)}),r.updateRunPanel(c.SURFACE_RUN_UPDATE_TYPE.ALL,t,f)}),e("#run-context-reset-button").on("click",function(n){if(r.buttonIsDisabled(n.target))return!0;f.resetUploadList(),r.updateRunPanel(c.SURFACE_RUN_UPDATE_TYPE.CR,t,f),e("#run-chooser-dest li .btn").each(function(t,n){e(n).hasClass("btn-success")||e(n).remove()}),e(n.target).addClass("disabled")})}(),function(){e("#jerry-sync-source-button").on("click",function(){r.buttonIsDisabled("#jerry-sync-source-button")||(f.syncSourceFromJerry(),r.toggleButton(!1,"jerry-sync-source-button"))}),e("#console-clear-button").on("click",function(){k.default.clearElement(e("#console-panel"))}),e("#command-line-input").keydown(function(t){t.keyCode===a.upArrow?f.getCommandCounter()-1>-1&&(f.setCommandCounter(f.getCommandCounter()-1),e("#command-line-input").val(f.getCommandList()[f.getCommandCounter()])):t.keyCode===a.downArrow&&(f.getCommandCounter()+1<f.getCommandList().length?(f.setCommandCounter(f.getCommandCounter()+1),e("#command-line-input").val(f.getCommandList()[f.getCommandCounter()])):(f.setCommandCounter(f.getCommandList().length),e("#command-line-input").val("")))}),e("#command-line-input").keypress(function(n){if(n.keyCode!==a.enter)return!0;var i=e("#command-line-input"),o=i.val().trim();f.addCommandToList(o),f.setCommandCounter(f.getCommandList().length);var l=/^([a-zA-Z]+)(?:\s+([^\s].*)|)$/.exec(o);if(!l)return s.error("Invalid command."),i.val(""),!0;if(l[2]||(l[2]=""),"help"==l[1])return s.info("Debugger commands:\n  connect <IP address:PORT> - connect to server (default is localhost:5001)\n  pendingbreak|pb <file_name:line>|<function_name> - add pending breakpoint\n  pendingdel <id> - delete pending breakpoint\n  list - list breakpoints\n  stop|st - stop execution\n  continue|c - continue execution\n  step|s - step-in execution\n  finish|f - step-out execution\n  next|n - execution until the next breakpoint\n  eval|e - evaluate expression\n  exception <0|1> - turn on/off the exception handler\n  dump - dump all breakpoint data"),i.val(""),!0;if("connect"==l[1]){if(t&&t.getEngineMode()!==d.ENGINE_MODE.DISCONNECTED)return s.info("Debugger is connected"),!0;var c=l[2],u="5001";if(""===c&&(c="localhost"),c.match(/.*:\d/)){var p=c.split(":");c=p[0],u=p[1]}if(u<0||u>65535)return s.error("Adress port must be between 0 and 65535."),!0;var b=c+":"+u;return s.info("Connect to: "+b),t=new h.default(b,f,r,m,g),i.val(""),!0}if(!t||t.getEngineMode()===d.ENGINE_MODE.DISCONNECTED)return s.error("Debugger is NOT connected."),i.val(""),!0;switch(l[1]){case"pb":case"pendingbreak":t.setBreakpoint(l[2],!0);break;case"pendingdel":t.deletePendingBreakpoint(l[2]);break;case"st":case"stop":e("#continue-stop-button").click();break;case"c":case"continue":e("#continue-stop-button").click();break;case"s":case"step":e("#step-button").click();break;case"f":case"finish":e("#finish-button").click();break;case"n":case"next":e("#next-button").click();break;case"e":case"eval":t.sendEval(l[2]);break;case"exception":t.sendExceptionConfig(l[2]);break;case"list":t.listBreakpoints();break;case"dump":t.dump();break;default:s.error("Unknown command: "+l[1])}return i.val(""),!0})}(),function(){e(".perfect-scrollable").each(function(t,n){i.panels.push(new T.default(e(n).get(0)))}),i.sidenav=new T.default(e(".sidenav-extra").get(0))}(),function(){e("#info-panels").resizable({handles:"e",resize:function(t,i){if(e("#editor-wrapper").css("width",r.editorHorizontalPercentage()+"%"),r.getPanelProperty("chart.active")){r.setChartPanelWidth(e("#chart-wrapper").width());var a=r.getPanelProperty("chart.height");0!==e("#chart-wrapper").height()&&(a=e("#chart-wrapper").height()),g.resizeChart(a,r.getPanelProperty("chart.width"))}e(i.originalElement).width(e(i.originalElement).width()/e("#workspace-wrapper").width()*100+"%"),n.editor.layout(r.getEditorContainerDimensions())}}),e(".vertical-resizable").not(":last").resizable({handles:"s",minHeight:r.getPanelProperty("height"),start:function(t,n){for(n.originalElement.other=e(n.originalElement).next();!n.originalElement.other.is(":visible");)n.originalElement.other=e(n.originalElement.other).next();n.originalElement.startHeight=n.originalElement.other.height()},resize:function(t,n){var i=n.element.resizable("option","minHeight"),a=n.size.height-n.originalSize.height;a>n.originalElement.startHeight-i&&(a=n.originalElement.startHeight,n.size.height=n.originalSize.height+a-i);var s=Math.max(r.getPanelProperty("height"),n.originalElement.startHeight-a);n.originalElement.other.height(s<r.getPanelProperty("height")?r.getPanelProperty("height"):s),"chart-wrapper"!=n.originalElement[0].id&&"chart-wrapper"!=n.originalElement.other[0].id||n.originalElement.other.height()==i||g.resizeChart(e("#chart-wrapper").height(),r.getPanelProperty("chart.width"))}}),e(window).resize(function(t){t.target===window&&(r.resetPanelsPercentage(),r.getPanelProperty("chart.active")&&setTimeout(function(){r.setChartPanelHeight(e("#chart-wrapper").height()),r.setChartPanelWidth(e("#chart-wrapper").width()),g.resizeChart(r.getPanelProperty("chart.height"),r.getPanelProperty("chart.width"))},100),e("#editor-wrapper").css("width",r.editorHorizontalPercentage()+"%"),n.editor.layout(r.getEditorContainerDimensions())),e("#info-panels").resizable("option","minWidth",Math.floor(e("#editor-wrapper").parent().width()/3)),e("#info-panels").resizable("option","maxWidth",Math.floor(e("#editor-wrapper").parent().width()/3*2));var a=!0,s=!1,o=void 0;try{for(var l,c=i.panels[Symbol.iterator]();!(a=(l=c.next()).done);a=!0){l.value.update()}}catch(e){s=!0,o=e}finally{try{!a&&c.return&&c.return()}finally{if(s)throw o}}})}()})}Object.defineProperty(t,"__esModule",{value:!0}),t.default=a,n("ASWD"),n("zlfi"),n("eY1z"),n("iFmY"),n("rlID"),n("DWNp"),n("8s/G");var s=n("bqMR"),o=i(s),r=n("Lo4h"),l=i(r),c=n("2QIY"),u=i(c),d=n("LEPx"),h=i(d),f=n("jSYl"),p=i(f),g=n("raM6"),b=i(g),m=n("zb0f"),_=i(m),y=n("otF4"),v=i(y),E=n("lOm7"),k=i(E),R=n("F/XN"),T=i(R),w=n("qmkL"),O=i(w);n("++2p"),n("1pAQ"),n("a95H")}).call(t,n("c/5P"))},bqMR:function(e,t,n){"use strict";(function(e){function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),s=n("lOm7"),o=function(e){return e&&e.__esModule?e:{default:e}}(s),r={WRAPPER:e("#popup-wrapper"),TYPE:{SUCCESS:0,INFO:1,WARNING:2,DANGER:3}},l=function(){function e(t){i(this,e),this._panel=t}return a(e,[{key:"info",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._panel.append(u("log-info",e,n)),o.default.scrollDown(this._panel),t&&r.WRAPPER.append(c(r.TYPE.INFO,"Info",e))}},{key:"warning",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._panel.append(u("log-warning",e,n)),o.default.scrollDown(this._panel),t&&r.WRAPPER.append(c(r.TYPE.WARNING,"Warning",e))}},{key:"error",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._panel.append(u("log-error",e,n)),o.default.scrollDown(this._panel),t&&r.WRAPPER.append(c(r.TYPE.DANGER,"Error",e,n))}},{key:"debug",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];e="DEBUG LOG: "+e,t&&(e=e+" "+JSON.stringify(t)),this._panel.append(u("log-debug",e,i)),o.default.scrollDown(this._panel),n&&r.WRAPPER.append(c(r.TYPE.DANGER,"Error",e,i))}}]),e}();t.default=l;var c=function(t,n,i){var a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s="",o="",l=null;switch(t){case r.TYPE.INFO:s="info-circle",o="alert-info";break;case r.TYPE.WARNING:s="exclamation-triangle",o="alert-warning";break;case r.TYPE.DANGER:s="ban",o="alert-danger";break;default:s="check-circle",o="alert-success"}return l=e('<div class="alert '+o+' alert-dismissable fade in"><i class="fa fa-'+s+'" aria-hidden="true"></i><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a><strong>'+n+"!</strong><br/>"+(a?"<strong><pre>"+i+"</pre></strong>":"<strong>"+i+"</strong>")+"</div>"),setTimeout(function(){l.alert("close")},1e4),l},u=function(t,n){var i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return e('<p class="data"><font class="data-timestamp">'+d()+"</font>"+(i?"<pre>":'<font class="data-message '+t+'">'+n+(i?"</pre>":"</font>"))+"</p>")},d=function(){var e=new Date;return"["+h(e.getHours())+":"+h(e.getMinutes())+":"+h(e.getSeconds())+"] "},h=function(e){return e<10?"0"+e:e}}).call(t,n("c/5P"))},eY1z:function(e,t){},iFmY:function(e,t){},jSYl:function(e,t,n){"use strict";(function(e){function i(e){return e&&e.__esModule?e:{default:e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e){e.originalEvent.wheelDelta>0?r():o()}function o(){g.xAxisData.length>=g.maxDatapointNumber+1&&g.minimumXIndex>g.maxDatapointNumber+1&&(g.minimumXIndex--,l())}function r(){g.xAxisData.length>g.maxDatapointNumber+g.minimumXIndex&&(g.minimumXIndex++,l())}function l(){g.chart.load({columns:[[g.xAxisData[0]].concat(g.xAxisData.slice(g.minimumXIndex,g.maxDatapointNumber+g.minimumXIndex)),[g.bytes.byte_code[0]].concat(g.bytes.byte_code.slice(g.minimumXIndex,g.maxDatapointNumber+g.minimumXIndex)),[g.bytes.string[0]].concat(g.bytes.string.slice(g.minimumXIndex,g.maxDatapointNumber+g.minimumXIndex)),[g.bytes.property[0]].concat(g.bytes.property.slice(g.minimumXIndex,g.maxDatapointNumber+g.minimumXIndex)),[g.bytes.object[0]].concat(g.bytes.object.slice(g.minimumXIndex,g.maxDatapointNumber+g.minimumXIndex)),[g.bytes.allocated[0]].concat(g.bytes.allocated.slice(g.minimumXIndex,g.maxDatapointNumber+g.minimumXIndex))]})}function c(){g.minimumXIndex=1,g.maxDatapointNumber=40,g.xAxisData=["x"],g.checkTime=["x"],g.bytes.byte_code=["byte_code_bytes"],g.bytes.string=["string_bytes"],g.bytes.property=["property_bytes"],g.bytes.object=["object_bytes"],g.bytes.allocated=["allocated_bytes"];for(var e=" ",t=0;t<g.maxDatapointNumber;t++)g.xAxisData.push(e),g.checkTime.push(null),g.bytes.byte_code.push(null),g.bytes.string.push(null),g.bytes.property.push(null),g.bytes.object.push(null),g.bytes.allocated.push(null),e=e.concat(" ")}Object.defineProperty(t,"__esModule",{value:!0});var u=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),d=n("Wc6C"),h=i(d),f=n("qmkL"),p=i(f),g={chart:null,maxDatapointNumber:null,minimumXIndex:null,tooltipRelativeYPosition:null,tooltipRelativeXPosition:null,xAxisData:null,checkTime:null,bytes:null},b=function(){function t(e,n){a(this,t),this._session=e,this._surface=n,this._startRecord=!1,this._activeChart=!1,g.bytes={byte_code:[],string:[],property:[],object:[],allocated:[]}}return u(t,[{key:"isRecordStarted",value:function(){return this._startRecord}},{key:"startRecord",value:function(e){this._startRecord=e}},{key:"isChartActive",value:function(){return this._activeChart}},{key:"setChartActive",value:function(e){this._activeChart=e}},{key:"containsData",value:function(){return null!=g.chart.data("allocated_bytes")[0].values[g.maxDatapointNumber-1].value}},{key:"initChart",value:function(){void 0===(arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0)?(c(),g.chart=h.default.generate({data:{x:"x",bindto:"#chart",columns:[g.xAxisData,g.bytes.byte_code,g.bytes.string,g.bytes.property,g.bytes.object,g.bytes.allocated],types:{byte_code_bytes:"area",string_bytes:"area",property_bytes:"area",object_bytes:"area",allocated_bytes:"area"},order:null,groups:[["byte_code_bytes","string_bytes","property_bytes","object_bytes","allocated_bytes"]]},axis:{x:{type:"category",tick:{rotate:-75,multiline:!1,culling:{max:10},fit:!0},height:55},y:{tick:{format:function(e){return Math.round(e)+" B"},count:6,fit:!0}}},point:{r:2,focus:{expand:{enabled:!1}}},tooltip:{position:function(){return{top:g.tooltipRelativeYPosition,left:g.tooltipRelativeXPosition}}},transition:{duration:0}}),e("#chart").bind("mousewheel DOMMouseScroll",function(e){s(e)}),e("#chart").mousemove(function(t){g.tooltipRelativeYPosition=t.clientY-e("#chart").offset().top+10,g.tooltipRelativeXPosition=t.clientX-e("#chart").offset().left+10})):l()}},{key:"resetChart",value:function(){g.xAxisData=void 0,g.bytes.byte_code=void 0,g.bytes.string=void 0,g.bytes.property=void 0,g.bytes.object=void 0,g.bytes.allocated=void 0,this._surface.toggleButton(!1,"chart-reset-button"),this._surface.toggleButton(!1,"chart-stop-button"),this._surface.toggleButton(!0,"chart-record-button"),e("#chart-record-button").css("background-color",""),this.initChart()}},{key:"resizeChart",value:function(e,t){g.chart.resize({height:e-45,width:t-10})}},{key:"disableChartButtons",value:function(){this._activeChart=!1;for(var t=e(".chart-btn"),n=0;n<t.length;n++)this._surface.toggleButton(!1,e(t[n]).attr("id"));e("#chart-record-button").css("background-color","")}},{key:"startChartWithButton",value:function(){this._startRecord=!0,this._activeChart=!0,this._surface.toggleButton(!1,"chart-reset-button"),this._surface.toggleButton(!0,"chart-stop-button"),this._surface.toggleButton(!1,"chart-record-button")}},{key:"stopChartWithButton",value:function(){this._activeChart=!1,this._surface.toggleButton(!0,"chart-reset-button"),this._surface.toggleButton(!1,"chart-stop-button"),this._surface.toggleButton(!0,"chart-record-button"),e("#chart-record-button").css("background-color","#e22b1b")}},{key:"exportChartData",value:function(){if(1==g.xAxisData.length)return void alert("There is nothing to be exported from the memory usage!");var e=[[g.xAxisData[0]].concat(g.xAxisData.slice(g.maxDatapointNumber+1)),[g.bytes.byte_code[0]].concat(g.bytes.byte_code.slice(g.maxDatapointNumber+1)),[g.bytes.string[0]].concat(g.bytes.string.slice(g.maxDatapointNumber+1)),[g.bytes.property[0]].concat(g.bytes.property.slice(g.maxDatapointNumber+1)),[g.bytes.object[0]].concat(g.bytes.object.slice(g.maxDatapointNumber+1)),[g.bytes.allocated[0]].concat(g.bytes.allocated.slice(g.maxDatapointNumber+1))];e[0][0]="Checked at:";var t="";e.forEach(function(e){t+=e.join(","),t+="\n"}),p.default.saveAs(new Blob([t],{type:"text/csv;charset=utf-8"}),"memoryUsage.csv"),this._surface.toggleSidenavExtra("download-sidenav")}},{key:"addNewDataPoints",value:function(e,t){g.checkTime.push(t);var n=1;if(t.includes("ln")){for(var i=g.maxDatapointNumber;i<g.xAxisData.length;i++)g.xAxisData[i].includes(t)&&n++;1==n?g.xAxisData.push(t):g.xAxisData.push("#"+n+" "+t)}else{var a=new m,s=g.xAxisData.length-1;for(g.xAxisData.push(a.toString());s>g.maxDatapointNumber;)g.xAxisData[s].includes("ln")||(a.increment(),g.xAxisData[s]=a.toString()),s--}g.bytes.byte_code.push(e[1]),g.bytes.string.push(e[2]),g.bytes.property.push(e[4]),g.bytes.object.push(e[3]),g.bytes.allocated.push(e[0]),g.xAxisData.length<=g.maxDatapointNumber+1?g.chart.load({columns:[g.xAxisData,g.bytes.byte_code,g.bytes.string,g.bytes.property,g.bytes.object,g.bytes.allocated]}):(g.minimumXIndex++,l())}}]),t}();t.default=b;var m=function(){function e(){a(this,e),this._hour=0,this._minute=0,this._second=0,this._millisecond=0}return u(e,[{key:"increment",value:function(){this._millisecond+=5,this._millisecond>=10&&(this._second+=1,this._millisecond-=10),60===this._second&&(this._minute+=1,this._second=0),60===this._minute&&(this._hour+=1,this._minute=0),24===this._hour&&this.reset()}},{key:"toString",value:function(){var e="-";return 0===this._hour&&0===this._minute&&0===this._second&&0===this._millisecond&&(e=""),""+e+this._minute+":"+this._second+"."+this._millisecond}},{key:"reset",value:function(){this._hour=0,this._minute=0,this._second=0,this._minute=0}}]),e}()}).call(t,n("c/5P"))},lOm7:function(e,t,n){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),s=function(){function e(){i(this,e)}return a(e,null,[{key:"assert",value:function(e){if(!e)throw new Error("Assertion failed.")}},{key:"clearElement",value:function(e){e.empty()}},{key:"scrollDown",value:function(e){e.scrollTop(e.prop("scrollHeight"))}}]),e}();t.default=s},otF4:function(e,t,n){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),s=n("ZKbB"),o=function(e){return e&&e.__esModule?e:{default:e}}(s),r=[{link:"process",mod:"process"},{link:"emitter",mod:"events"},{link:"timers",mod:"timers"}],l=function(){function e(){i(this,e)}return a(e,[{key:"getCompletionProvider",value:function(){var e=this;return{triggerCharacters:["."],provideCompletionItems:function(t,n){var i=t.getValueInRange({startLineNumber:1,startColumn:1,endLineNumber:n.lineNumber,endColumn:n.column}),a=e.lookingForModules(i),s=t.getValueInRange({startLineNumber:n.lineNumber,startColumn:1,endLineNumber:n.lineNumber,endColumn:n.column}),l=s.split(/\s/g).pop().replace(/\./g,""),c=a.concat(r).find(function(e){return e.link===l});return c?e.getCompletionProposals(o.default,[c]):e.getCompletionProposals(o.default,r.concat(a))}}}},{key:"getCompletionProposals",value:function(e,t){return t.map(function(t){return e[t.mod]}).reduce(function(e,t){return e.concat(t)},[])}},{key:"lookingForModules",value:function(e){var t=/^(var|let|const)?\s*([a-zA-Z0-9$_]+)\s*=[\s|\n]*require\s*\(\s*['"]([a-zA-Z0-9$_]+)['"]\s*\);?$/;return e.split("\n").filter(function(e){return t.test(e)}).map(function(e){var n=t.exec(e);return{link:n[2],mod:n[3]}})}}]),e}();t.default=l},raM6:function(e,t,n){"use strict";(function(e){function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),s=n("NIqO"),o=function(e){return e&&e.__esModule?e:{default:e}}(s),r={TEXT:0,NUMBER:1,CHECKBOX:2,SELECT:3,SURFACE:4},l=function(){function t(e,n){i(this,t),this._editor=e,this._surface=n,this._settings=o.default.get("settings"),void 0===this._settings?this.init():this.validityCheck()}return a(t,[{key:"getValue",value:function(e){var t=void 0;return""!==e&&(e=e.split("."),2===e.length&&this._settings[e[0]][e[1]]&&(t=this._settings[e[0]][e[1]])),t}},{key:"initListeners",value:function(){var t=this;e(".control-item select, .control-item input").on("click",function(e){if(t._surface.settingItemIsDisabled(e.target.id))return e.preventDefault(),!1}),e(".control-item select, .control-item input").on("change",function(n){var i=e(n.target).parent().parent().attr("id").split("-")[0],a=n.target.id;switch(t.CONTROLS[i][a][0]){case r.CHECKBOX:t.CONTROLS[i][a][1](e(n.target).prop("checked")),t.modify(i+"."+a,e(n.target).prop("checked"));break;case r.SELECT:default:t.CONTROLS[i][a][1](e(n.target).val()),t.modify(i+"."+a,e(n.target).val())}})}},{key:"init",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];e||(this._settings={});var t=!0,n=!1,i=void 0;try{for(var a,s=Object.keys(this.CONTROLS)[Symbol.iterator]();!(t=(a=s.next()).done);t=!0){var r=a.value;e||(this._settings[r]={});var l=!0,c=!1,u=void 0;try{for(var d,h=Object.keys(this.CONTROLS[r])[Symbol.iterator]();!(l=(d=h.next()).done);l=!0){var f=d.value;this._settings[r][f]=this.CONTROLS[r][f][2]}}catch(e){c=!0,u=e}finally{try{!l&&h.return&&h.return()}finally{if(c)throw u}}}}catch(e){n=!0,i=e}finally{try{!t&&s.return&&s.return()}finally{if(n)throw i}}e&&this.load(),o.default.set("settings",this._settings)}},{key:"validityCheck",value:function(){var e=this;Object.keys(this._settings).every(function(t){return!!e.CONTROLS.hasOwnProperty(t)&&Object.keys(e._settings[t]).every(function(n){return e.CONTROLS[t].hasOwnProperty(n)})})||this.init()}},{key:"load",value:function(){var t=!0,n=!1,i=void 0;try{for(var a,s=Object.keys(this.CONTROLS)[Symbol.iterator]();!(t=(a=s.next()).done);t=!0){var o=a.value,l=!0,c=!1,u=void 0;try{for(var d,h=Object.keys(this.CONTROLS[o])[Symbol.iterator]();!(l=(d=h.next()).done);l=!0){var f=d.value;switch(this.CONTROLS[o][f][0]){case r.CHECKBOX:e("#"+f).prop("checked",this._settings[o][f]),this.CONTROLS[o][f][1](this._settings[o][f]);break;case r.SURFACE:this._settings[o][f]!==this._surface.getPanelProperty(f+".active")&&this.CONTROLS[o][f][1]();break;case r.SELECT:default:e("#"+f).val(this._settings[o][f]),this.CONTROLS[o][f][1](this._settings[o][f])}}}catch(e){c=!0,u=e}finally{try{!l&&h.return&&h.return()}finally{if(c)throw u}}}}catch(e){n=!0,i=e}finally{try{!t&&s.return&&s.return()}finally{if(n)throw i}}}},{key:"modify",value:function(e,t){return""!==e&&(e=e.split("."),2===e.length&&(this._settings[e[0]][e[1]]=t,o.default.set("settings",this._settings),!0))}},{key:"CONTROLS",get:function(){var t=this;return{global:{theme:[r.SELECT,function(t){window.monaco.editor.setTheme(t),"vs"===t?e("body").removeClass("dark-theme"):e("body").addClass("dark-theme")},"vs"]},editor:{fontsize:[r.SELECT,function(e){t._editor.updateOptions({fontSize:e})},"14px"],wrap:[r.SELECT,function(e){t._editor.updateOptions({wordWrap:e})},"off"],wrapColumn:[r.SELECT,function(e){t._editor.updateOptions({wordWrapColumn:e})},"80"],lineHighlight:[r.SELECT,function(e){t._editor.updateOptions({renderLineHighlight:e})},"all"],whitespace:[r.SELECT,function(e){t._editor.updateOptions({renderWhitespace:e})},"all"],minimap:[r.CHECKBOX,function(e){t._editor.updateOptions({minimap:{enabled:e}})},!0],folding:[r.CHECKBOX,function(e){t._editor.updateOptions({folding:e})},!1],autoClosingBrackets:[r.CHECKBOX,function(e){t._editor.updateOptions({autoClosingBrackets:e})},!0],matchBrackets:[r.CHECKBOX,function(e){t._editor.updateOptions({matchBrackets:e})},!0],autoIndent:[r.CHECKBOX,function(e){t._editor.updateOptions({autoIndent:e})},!0],renderIndentGuides:[r.CHECKBOX,function(e){t._editor.updateOptions({renderIndentGuides:e})},!1],mouseWheelZoom:[r.CHECKBOX,function(e){t._editor.updateOptions({mouseWheelZoom:e})},!1]},debugger:{backtraceDepth:[r.NUMBER,function(e){t.modify("debugger.backtraceDepth",e)},0],transpileToES5:[r.CHECKBOX,function(e){t.modify("debugger.transpileToES5",e)},!1]},panels:{backtrace:[r.SURFACE,function(){t._surface.togglePanel("backtrace")},!0],breakpoints:[r.SURFACE,function(){t._surface.togglePanel("breakpoints")},!0],watch:[r.SURFACE,function(){t._surface.togglePanel("watch")},!1],chart:[r.SURFACE,function(){t._surface.togglePanel("chart")},!1],output:[r.SURFACE,function(){t._surface.togglePanel("output")},!1],run:[r.SURFACE,function(){t._surface.togglePanel("run")},!1],console:[r.SURFACE,function(){t._surface.togglePanel("console")},!0]}}}}]),t}();t.default=l}).call(t,n("c/5P"))},rlID:function(e,t){},tsLY:function(e,t,n){"use strict";function i(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),o=n("LEPx"),r=function(){function e(t){a(this,e),this._debuggerObj=t,this._alive=!0,this._source="",this._sourceData=null,this._sourceName="",this._sourceNameData=null,this._functionName=null,this._stack=[{is_func:!1,line:1,column:1,name:"",source:"",lines:[],offsets:[]}],this._newFunctions={}}return s(e,[{key:"isAlive",value:function(){return this._alive}},{key:"setAlive",value:function(e){this._alive=e}},{key:"receive",value:function(e){var t=this;switch(e[0]){case o.PROTOCOL.SERVER.JERRY_DEBUGGER_PARSE_ERROR:return void(this._alive=!1);case o.PROTOCOL.SERVER.JERRY_DEBUGGER_SOURCE_CODE:case o.PROTOCOL.SERVER.JERRY_DEBUGGER_SOURCE_CODE_END:return this._sourceData=this._debuggerObj.concatUint8Arrays(this._sourceData,e),void(e[0]===o.PROTOCOL.SERVER.JERRY_DEBUGGER_SOURCE_CODE_END&&(this._source=this._debuggerObj.cesu8ToString(this._sourceData),this._debuggerObj.setSources(this._sourceName,this._source)));case o.PROTOCOL.SERVER.JERRY_DEBUGGER_SOURCE_CODE_NAME:case o.PROTOCOL.SERVER.JERRY_DEBUGGER_SOURCE_CODE_NAME_END:return this._sourceNameData=this._debuggerObj.concatUint8Arrays(this._sourceNameData,e),void(e[0]===o.PROTOCOL.SERVER.JERRY_DEBUGGER_SOURCE_CODE_NAME_END&&(this._sourceName=this._debuggerObj.cesu8ToString(this._sourceNameData)));case o.PROTOCOL.SERVER.JERRY_DEBUGGER_FUNCTION_NAME:case o.PROTOCOL.SERVER.JERRY_DEBUGGER_FUNCTION_NAME_END:return void(this._functionName=this._debuggerObj.concatUint8Arrays(this._functionName,e));case o.PROTOCOL.SERVER.JERRY_DEBUGGER_PARSE_FUNCTION:var n=this._debuggerObj.decodeMessage("II",e,1);return this._stack.push({is_func:!0,line:n[0],column:n[1],name:this._debuggerObj.cesu8ToString(this._functionName),source:this._source,sourceName:this._sourceName,lines:[],offsets:[]}),void(this._functionName=null);case o.PROTOCOL.SERVER.JERRY_DEBUGGER_BREAKPOINT_LIST:case o.PROTOCOL.SERVER.JERRY_DEBUGGER_BREAKPOINT_OFFSET_LIST:var a=void 0;e.byteLength<5&&this._debuggerObj.abortConnection("message too short."),a=e[0]===o.PROTOCOL.SERVER.JERRY_DEBUGGER_BREAKPOINT_LIST?this._stack[this._stack.length-1].lines:this._stack[this._stack.length-1].offsets;for(var s=1;s<e.byteLength;s+=4)a.push(this._debuggerObj.decodeMessage("I",e,s)[0]);return;case o.PROTOCOL.SERVER.JERRY_DEBUGGER_BYTE_CODE_CP:var r=this._stack.pop();r.byte_code_cp=this._debuggerObj.decodeMessage("C",e,1)[0];var l={},c={};r.firstBreakpointLine=r.lines[0],r.firstBreakpointOffset=r.offsets[0];for(var u=0;u<r.lines.length;u++){var d={line:r.lines[u],offset:r.offsets[u],func:r,index:-1};l[d.line]=d,c[d.offset]=d}if(r.lines=l,r.offsets=c,this._newFunctions[r.byte_code_cp]=r,this._stack.length>0)return;r.source=this._source.split(/\r\n|[\r\n]/),r.sourceName=this._sourceName;break;case o.PROTOCOL.SERVER.JERRY_DEBUGGER_RELEASE_BYTE_CODE_CP:var h=this._debuggerObj.decodeMessage("C",e,1)[0];return void(h in this._newFunctions?delete this._newFunctions[h]:this._debuggerObj.releaseFunction(e));default:this._debuggerObj.abortConnection("unexpected message.")}for(var f in this._newFunctions)if(this._newFunctions.hasOwnProperty(f)){var p=this._newFunctions[f];this._debuggerObj.setFunctions(f,p);for(var g in p.lines)if(p.lines.hasOwnProperty(g)){var b=this._debuggerObj.lineList.get(g);this._debuggerObj.lineList.set(g,b?[].concat(i(b),[p]):[p])}}var m=this._debuggerObj.breakpoints.pendingBreakpoints,_=this._debuggerObj.getFunctions(),y=0;m.length?m.forEach(function(e,n){Object.keys(_).forEach(function(t){_[t].sourceName===e.sourceName&&(y=_[t].source.length)}),e.line?e.line<=y&&t._debuggerObj.setBreakpoint(e.sourceName+":"+e.line,!0)&&t._debuggerObj.deletePendingBreakpoint(n):e.function&&t._debuggerObj.setBreakpoint(e.function,!0)&&t._debuggerObj.deletePendingBreakpoint(n)}):this._debuggerObj.sendParserConfig(0),this._alive=!1}}]),e}();t.default=r},yvHB:function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function a(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function s(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),r=n("Yuv6"),l=i(r),c=n("WhJR"),u=i(c),d=function(){function e(){s(this,e),this._activeBreakpoints=[],this._pendingBreakpoints=[],this._lastHit=null,this._nextIndex=1}return o(e,[{key:"increaseNextIndex",value:function(){this._nextIndex++}},{key:"addActiveBreakpoint",value:function(e,t,n,i){this._activeBreakpoints=[].concat(a(this._activeBreakpoints),[new l.default(e,t,n,i)])}},{key:"addPendingBreakpoint",value:function(e,t,n){this._pendingBreakpoints=[].concat(a(this._pendingBreakpoints),[new u.default(e,t,n)])}},{key:"deleteActiveBreakpointByIndex",value:function(e){this._activeBreakpoints=this._activeBreakpoints.filter(function(t){return t.index!==e})}},{key:"deletePendingBreakpointByIndex",value:function(e){this._pendingBreakpoints=this._pendingBreakpoints.filter(function(t){return t.index!==e})}},{key:"deleteActiveBreapoints",value:function(){this._activeBreakpoints=[]}},{key:"deletePendingBreakpoints",value:function(){this._pendingBreakpoints=[]}},{key:"getActiveBreakpointByIndex",value:function(e){return this._activeBreakpoints.find(function(t){return t.index===e})}},{key:"getActiveBreakpointIndexByLine",value:function(e){var t=this._activeBreakpoints.find(function(t){return t.line===e});return t?t.index:void 0}},{key:"activeBreakpoints",get:function(){return this._activeBreakpoints}},{key:"pendingBreakpoints",get:function(){return this._pendingBreakpoints}},{key:"lastHit",get:function(){return this._lastHit},set:function(e){this._lastHit=e}},{key:"nextIndex",get:function(){return this._nextIndex}}]),e}();t.default=d},zb0f:function(e,t,n){"use strict";(function(e){function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),s=n("bqMR"),o=function(e){return e&&e.__esModule?e:{default:e}}(s),r=n("hCFR"),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(r),c=n("aRf0"),u={transpiled:[]},d=function(){function t(){i(this,t),this._logger=new o.default(e("#console-panel"))}return a(t,[{key:"transformToES5",value:function(t,n){var i=t.split(".")[0];try{u.transpiled[i]=l.transform(n,{filename:t,presets:["es2015-loose"],sourceMaps:!0}),u.transpiled[i].smc=new c.SourceMapConsumer(u.transpiled[i].map)}catch(t){return this._logger.error(e(t).get(0).message,!0,!0),!1}return!0}},{key:"getTransformedSource",value:function(e){return u.transpiled[e.split(".")[0]].code}},{key:"getSingleSourceMap",value:function(e){return u.transpiled[e.split(".")[0]].map}},{key:"getOriginalPositionFor",value:function(e,t,n){var i=u.transpiled[e.split(".")[0]].smc.originalPositionFor({line:t,column:n});return{line:i.line,column:i.column}}},{key:"getGeneratedPositionFor",value:function(e,t,n){var i=u.transpiled[e.split(".")[0]].smc.generatedPositionFor({source:e,line:t,column:n});return{line:i.line,column:i.column}}},{key:"isEmpty",value:function(){return!u.transpiled.length}},{key:"clearTranspiledSources",value:function(){u.transpiled=[]}}]),t}();t.default=d}).call(t,n("c/5P"))},zlfi:function(e,t){}},["JkW7"]);
//# sourceMappingURL=app.39e70d2174c34e0eab42.bundle.js.map